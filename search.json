[{"path":"https://sean4andrew.github.io/safuncs/articles/safuncs.html","id":"survival-analysis","dir":"Articles","previous_headings":"","what":"Survival Analysis","title":"Get Started!","text":"ONDA, survival data often available scientists initially form rows entries every mortality observed. data needs converted useful form analysis R Prism. function Surv_Gen() shortens data transformation step just one line code! , showcase use. Let us first examine raw survival data can get OneDrive mort excel file: data contains several rows (first 5 shown) representing one mortality. 2nd leftmost column indicates Time Event (TTE), e.g. days post challenge, last column indicates type Status event (1 = death, 0 = sampled-survived). Missing data rows representing surviving fish (Status = 0); needs present proper survival analysis.  Introducing Surv_Gen()! Obtain proper survival data simply inserting mort data Surv_Gen(). Provide time (TTE) indicating fish survived starting number fish used per tank. bottom 5 rows output dataframe, shows generated survivor data (note: Status = 0 survivors) can also specify tank-specific fish numbers inserting dataframe input starting_fish_count! newly set R script, can now quickly regenerate survival data whenever slight change mort database; perhaps day--day corrections.","code":"data(mort_db_ex) # load example data file head(mort_db_ex, n = 5) # view first 5 rows of data #>   Tank.ID Trt.ID TTE Status #> 1      C1      B   0      1 #> 2      C6      B   4      1 #> 3      C6      B   7      1 #> 4      C1      B  19      1 #> 5      C8      D  19      1 Surv_Gen(mort_db = mort_db_ex,          starting_fish_count = 100, # per tank          last_tte = 54) #>      Tank.ID Trt.ID TTE Status #> 1196      C8      D  54      0 #> 1197      C8      D  54      0 #> 1198      C8      D  54      0 #> 1199      C8      D  54      0 #> 1200      C8      D  54      0 # reduce example data to simplify the demonstration mort_db_ex2 = mort_db_ex[mort_db_ex$Tank.ID %in% c(\"C01\", \"C02\", \"C03\"),]  # apply Surv_Gen()! Surv_Gen(mort_db = mort_db_ex2,          starting_fish_count = data.frame(Trt.ID = c(\"B\", \"A\", \"C\"), # a vector of treatment groups for the specified tanks                                           Tank.ID = c(\"C1\", \"C2\", \"C3\"), # a vector with ALL tanks in the study                                           starting_fish_count = c(100, 100, 50)), # a vector of fish numbers in same order as Tank.IDs          last_tte = 54)"},{"path":"https://sean4andrew.github.io/safuncs/articles/safuncs.html","id":null,"dir":"Articles","previous_headings":"","what":"Get Started!","title":"Get Started!","text":"[Sean procrastinating! Slap get documentation done..]","code":""},{"path":"https://sean4andrew.github.io/safuncs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sean Andrew. Maintainer.","code":""},{"path":"https://sean4andrew.github.io/safuncs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Andrew S (2024). safuncs: Functions Accelerate Preparation Analysis Biological Data. R package version 2.0.0, https://sean4andrew.github.io/safuncs/, https://github.com/sean4andrew/safuncs.","code":"@Manual{,   title = {safuncs: Functions to Accelerate the Preparation and Analysis of Biological Data},   author = {Sean Andrew},   year = {2024},   note = {R package version 2.0.0, https://sean4andrew.github.io/safuncs/},   url = {https://github.com/sean4andrew/safuncs}, }"},{"path":"https://sean4andrew.github.io/safuncs/reference/Con_Simul.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Contingency Table — Con_Simul","title":"Simulate Contingency Table — Con_Simul","text":"Simulate contingency table fish counts distributed across n lesion categories n treatment groups. Probability values generating counts cell (.e. factor level combination) can assigned using probs argument. function designed use power /false positive rate calculations; details, see Con_Simul_PR().","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/Con_Simul.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Contingency Table — Con_Simul","text":"","code":"Con_Simul(   probs = \"equal\",   total_count = 750,   n_lesion = 3,   n_Trt. = 5,   margin_fixed_Trt. = FALSE,   verbose = TRUE )"},{"path":"https://sean4andrew.github.io/safuncs/reference/Con_Simul.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Contingency Table — Con_Simul","text":"probs Matrix probability values created using matrix(). row matrix represent treatment group column lesion category. probability values matrix sum 1. Default = equal probability across cells. total_count Total number counts contingency table. Defaults 750. n_lesion Number lesion categories. Ignored probs specified. Defaults 3. n_Trt. Number treatment groups. Ignored probs specified. Defaults 5. margin_fixed_Trt. Whether margins fixed per treatment group (.e. fixed number fish per treatment). Default = FALSE. See Details information marginals. verbose Whether print parameters probability matrix used. Default = TRUE.","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/Con_Simul.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Contingency Table — Con_Simul","text":"Returns list containing:","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/Con_Simul.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Contingency Table — Con_Simul","text":"Counts simulated multinomial distribution using rmultinom(). Counts may assumed fixed total marginals (e.g. per treatment group) fixed total row column marginals. discussion types marginals contingency tables, refer : comments Arguments.","code":""},{"path":[]},{"path":"https://sean4andrew.github.io/safuncs/reference/Con_Simul.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Contingency Table — Con_Simul","text":"","code":"Con_Tab = Con_Simul(total_count = 750, n_lesion = 3, n_Trt. = 5) Con_Tab = Con_Simul(probs = matrix(nrow = 2, ncol = 3, c(1/6, 3/12, 1/6, 1/6, 1/6, 1/12)))"},{"path":"https://sean4andrew.github.io/safuncs/reference/Con_Simul_PR.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Positive Rates for Contingency Table — Con_Simul_PR","title":"Calculate Positive Rates for Contingency Table — Con_Simul_PR","text":"Computes statistical power optionally false positive rates tests applied contingency tables based simulations. Specify simulation process using Con_Simul(), serves input. Positive rates computed Chi-square test optionally Fisher's exact test Wald test applied ordinal regression model.","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/Con_Simul_PR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Positive Rates for Contingency Table — Con_Simul_PR","text":"","code":"Con_Simul_PR(   Con_Simul_Object = Con_Simul(),   add_fisher_exact = FALSE,   add_ord = FALSE,   sample_sizes = NULL,   n_sim = 1000,   FPR = TRUE )"},{"path":"https://sean4andrew.github.io/safuncs/reference/Con_Simul_PR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Positive Rates for Contingency Table — Con_Simul_PR","text":"Con_Simul_Object Output Con_Simul() argument verbose set TRUE. add_fisher_exact Whether compute positive rates Fisher's Exact test. May add >1 min calculation time. Defaults FALSE. add_ord Whether compute positive rates Wald test fitted ordinal regression model. May add >1 min calculation time. Defaults FALSE. sample_sizes vector sample sizes false positive rates calculated. sample size defined total number counts contingency table. Defaults total count received Con_Simul_Object. n_sim Number contingency tables simulated positive rate calculation. Defaults 1000. FPR Whether calculate false positive rate addition power. Defaults TRUE.","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/Con_Simul_PR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Positive Rates for Contingency Table — Con_Simul_PR","text":"Returns list containing:","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/Con_Simul_PR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Positive Rates for Contingency Table — Con_Simul_PR","text":"Power defined percentage tests yielding positive results (p-value < 0.05) set contingency tables simulated based data-generating process probability matrix specified Con_Simul(). specified probability matrix represent parameters population desire detect significant effect sample. simulated contingency tables reflect sample outcomes specified population parameter. False Positive Rate defined percentage tests yielding positive results (p-value < 0.05) contingency tables simulated based probability matrix without treatment effect. odd ratios lesion scores treatment groups assumed control (first row probability matrix). P-values Chi-square test computed using stats::chisq.test() default parameters. P-values Fisher's exact test computed using stats::fisher.test() simulate.p.value set TRUE, alongside default parameters. P-values ordinal regression computed stats::anova() applied output ordinal::clm().","code":""},{"path":[]},{"path":"https://sean4andrew.github.io/safuncs/reference/Con_Simul_PR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Positive Rates for Contingency Table — Con_Simul_PR","text":"","code":"## Below I show how we can perform a simple power calculation using this tool. ## Suppose I want to calculate power for Treatment B which halves the lesions in category 2 and 3. ## I then specify the following probability matrix and feed it into Con_Simul(): probs_mat = matrix(nrow = 2, ncol = 3, data = c(1/6, 1/3, 1/6, 1/12, 1/6, 1/12)) sim_tab = Con_Simul(probs_mat)  ## Next, I feed the output into Con_Simul_PR(): Con_Simul_PR(sim_tab, sample_sizes = c(50, 100, 150)) #> $pos_rate #>    Total_Count Percent_of_Significant_Results Statistical_Test Class #> 1           50                           56.8        Chisquare Power #> 2          100                           87.5        Chisquare Power #> 3          150                           95.7        Chisquare Power #> 10          50                            4.1        Chisquare   FPR #> 11         100                            5.7        Chisquare   FPR #> 12         150                            4.8        Chisquare   FPR #>  #> $eff_mat #>           [,1]       [,2]       [,3] #> [1,] 0.1666667 0.16666667 0.16666667 #> [2,] 0.3333333 0.08333333 0.08333333 #>  #> $null_mat #>           [,1]      [,2]      [,3] #> [1,] 0.1666667 0.1666667 0.1666667 #> [2,] 0.1666667 0.1666667 0.1666667 #>  #> $plot  #>  ## Results: Power is ~55, 86, and 97% for the Chi-square test using total counts of 50, 100, and 150, respectively.  ## The same power for Chi-square test can be calculated using Cohen's omega (w) method which is faster but has its own limitations; ## e.g. assumes one data generating process for the contingency table (the no fixed marginals). library(pwr) pwr::pwr.chisq.test(w = ES.w2(probs_mat), df = 2, sig.level = 0.05, N = 100) #>  #>      Chi squared power calculation  #>  #>               w = 0.3333333 #>               N = 100 #>              df = 2 #>       sig.level = 0.05 #>           power = 0.8563144 #>  #> NOTE: N is the number of observations #>  ## Results: Power is 85.6% for the Chi-square test at the total count of 100."},{"path":"https://sean4andrew.github.io/safuncs/reference/GG_Colour_Hue.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Default Colours by ggplot — GG_Colour_Hue","title":"Get Default Colours by ggplot — GG_Colour_Hue","text":"function useful ! Origin","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/GG_Colour_Hue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Default Colours by ggplot — GG_Colour_Hue","text":"","code":"GG_Colour_Hue(n)"},{"path":"https://sean4andrew.github.io/safuncs/reference/GG_Colour_Hue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Default Colours by ggplot — GG_Colour_Hue","text":"n Number colour groups","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/GG_Colour_Hue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Default Colours by ggplot — GG_Colour_Hue","text":"Returns vector representing default colour codes assigned group ggplot.","code":""},{"path":[]},{"path":"https://sean4andrew.github.io/safuncs/reference/GG_Colour_Hue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Default Colours by ggplot — GG_Colour_Hue","text":"","code":"# Get colour codes used for 6 categorical groups GG_Colour_Hue(6) #> [1] \"#F8766D\" \"#B79F00\" \"#00BA38\" \"#00BFC4\" \"#619CFF\" \"#F564E3\""},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Survivor Data — Surv_Gen","title":"Generate Survivor Data — Surv_Gen","text":"Produces survival data includes rows every surviving fish based starting number fish mortality data. generate survivor data tanks absent input mortality dataframe, specify arguments tank_without_mort trt_without_mort. generate survivor data tank specific starting numbers fish, input dataframe argument starting_fish_count instead single value; details Arguments.","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Survivor Data — Surv_Gen","text":"","code":"Surv_Gen(   mort_db,   starting_fish_count,   last_tte,   tank_without_mort = NULL,   trt_without_mort = NULL )"},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Survivor Data — Surv_Gen","text":"mort_db mort dataframe described Details. starting_fish_count Value representing starting number fish every tank. Alternatively, dataframe containing columns \"Trt.ID\", \"Tank.ID\", \"starting_fish_count\" allow different fish starting numbers per tank. last_tte Value representing time--event fish survived , assigned every row survivor data generated. tank_without_mort vector strings specifying tanks absent mort_db; used generate survivor data tanks. Argument ignored starting_fish_count dataframe. trt_without_mort vector strings corresponding tank_without_mort. Keep order . Argument ignored starting_fish_count dataframe.","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Gen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Survivor Data — Surv_Gen","text":"dataframe produced combining input mort data generated rows survivor data.","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Gen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Survivor Data — Surv_Gen","text":"mort dataframe supplied input consist following 4 columns minimum: \"Trt.ID\" = Labels treatment groups study. \"Tank.ID\" = Labels tanks study (tank must unique label). \"TTE\" = Time Event. Event fish death sampled removed depending \"Status\". \"Status\" = Value indicating happened TTE. 1 dead fish, 0 sampled removed. row represent one fish. example dataframe, execute data(mort_db_ex) view.","code":""},{"path":[]},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Gen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Survivor Data — Surv_Gen","text":"","code":"#First, we load an example mortality database available from the safuncs package data(mort_db_ex)  #Next, we input this data into Surv_Gen() as well as the study details to generate entries (rows) for survivors in the output - a \"complete\" dataframe for further survival analysis and data visualization. Surv_Gen(mort_db = mort_db_ex,          starting_fish_count = 100,          last_tte = 54,          tank_without_mort = c(\"C99\", \"C100\"),          trt_without_mort = c(\"A\", \"B\")) #>      Tank.ID Trt.ID TTE Status #> 1         C1      B   0      1 #> 2         C6      B   4      1 #> 3         C6      B   7      1 #> 4         C1      B  19      1 #> 5         C8      D  19      1 #> 6        C11      B  20      1 #> 7        C11      B  20      1 #> 8        C12      C  20      1 #> 9         C1      B  21      1 #> 10        C8      D  21      1 #> 11        C1      B  22      1 #> 12        C3      C  22      1 #> 13        C6      B  22      1 #> 14        C8      D  22      1 #> 15        C9      A  23      1 #> 16        C1      B  24      1 #> 17        C3      C  24      1 #> 18       C11      B  24      1 #> 19        C6      B  25      1 #> 20        C8      D  25      1 #> 21       C11      B  25      1 #> 22        C2      A  26      1 #> 23        C3      C  26      1 #> 24        C5      D  26      1 #> 25        C5      D  26      1 #> 26        C9      A  26      1 #> 27        C9      A  26      1 #> 28       C11      B  26      1 #> 29       C12      C  26      1 #> 30        C9      A  26      1 #> 31       C11      B  26      1 #> 32       C11      B  26      1 #> 33       C11      B  26      1 #> 34        C9      A  26      1 #> 35        C1      B  27      1 #> 36        C3      C  27      1 #> 37        C4      D  27      1 #> 38        C5      D  27      1 #> 39        C6      B  27      1 #> 40        C6      B  27      1 #> 41       C11      B  27      1 #> 42       C11      B  27      1 #> 43       C11      B  27      1 #> 44       C11      B  27      1 #> 45       C14      A  27      1 #> 46       C15      C  27      1 #> 47        C2      A  27      1 #> 48        C2      A  27      1 #> 49        C3      C  27      1 #> 50        C1      B  27      1 #> 51        C9      A  27      1 #> 52        C6      B  28      1 #> 53        C6      B  28      1 #> 54        C8      D  28      1 #> 55       C11      B  28      1 #> 56       C11      B  28      1 #> 57       C12      C  28      1 #> 58       C15      C  28      1 #> 59        C3      C  28      1 #> 60        C1      B  29      1 #> 61        C4      D  29      1 #> 62        C4      D  29      1 #> 63        C5      D  29      1 #> 64        C5      D  29      1 #> 65        C6      B  29      1 #> 66        C6      B  29      1 #> 67        C6      B  29      1 #> 68        C9      A  29      1 #> 69       C11      B  29      1 #> 70       C11      B  29      1 #> 71       C11      B  29      1 #> 72       C12      C  29      1 #> 73        C5      D  29      1 #> 74        C5      D  29      1 #> 75        C5      D  29      1 #> 76       C11      B  29      1 #> 77       C15      C  29      1 #> 78        C1      B  30      1 #> 79        C1      B  30      1 #> 80        C1      B  30      1 #> 81        C1      B  30      1 #> 82        C2      A  30      1 #> 83        C2      A  30      1 #> 84        C3      C  30      1 #> 85        C4      D  30      1 #> 86        C4      D  30      1 #> 87        C4      D  30      1 #> 88        C4      D  30      1 #> 89        C4      D  30      1 #> 90        C5      D  30      1 #> 91        C6      B  30      1 #> 92        C6      B  30      1 #> 93        C6      B  30      1 #> 94        C6      B  30      1 #> 95        C6      B  30      1 #> 96        C6      B  30      1 #> 97        C8      D  30      1 #> 98       C11      B  30      1 #> 99       C11      B  30      1 #> 100      C11      B  30      1 #> 101      C11      B  30      1 #> 102      C12      C  30      1 #> 103      C12      C  30      1 #> 104      C12      C  30      1 #> 105      C15      C  30      1 #> 106       C1      B  30      1 #> 107      C14      A  30      1 #> 108       C2      A  31      1 #> 109       C2      A  31      1 #> 110       C3      C  31      1 #> 111       C3      C  31      1 #> 112       C4      D  31      1 #> 113       C4      D  31      1 #> 114       C4      D  31      1 #> 115       C4      D  31      1 #> 116       C6      B  31      1 #> 117       C6      B  31      1 #> 118       C8      D  31      1 #> 119       C8      D  31      1 #> 120       C8      D  31      1 #> 121       C8      D  31      1 #> 122       C8      D  31      1 #> 123       C9      A  31      1 #> 124      C11      B  31      1 #> 125      C11      B  31      1 #> 126      C12      C  31      1 #> 127      C12      C  31      1 #> 128      C12      C  31      1 #> 129      C14      A  31      1 #> 130      C15      C  31      1 #> 131       C1      B  31      1 #> 132       C3      C  31      1 #> 133       C4      D  31      1 #> 134      C11      B  31      1 #> 135       C2      A  32      1 #> 136       C2      A  32      1 #> 137       C2      A  32      1 #> 138       C2      A  32      1 #> 139       C2      A  32      1 #> 140       C3      C  32      1 #> 141       C4      D  32      1 #> 142       C4      D  32      1 #> 143       C6      B  32      1 #> 144       C9      A  32      1 #> 145      C11      B  32      1 #> 146      C12      C  32      1 #> 147      C14      A  32      1 #> 148       C2      A  32      1 #> 149       C4      D  32      1 #> 150       C4      D  32      1 #> 151       C6      B  32      1 #> 152       C1      B  33      1 #> 153       C1      B  33      1 #> 154       C1      B  33      1 #> 155       C1      B  33      1 #> 156       C2      A  33      1 #> 157       C2      A  33      1 #> 158       C3      C  33      1 #> 159       C3      C  33      1 #> 160       C3      C  33      1 #> 161       C3      C  33      1 #> 162       C3      C  33      1 #> 163       C4      D  33      1 #> 164       C5      D  33      1 #> 165       C6      B  33      1 #> 166       C6      B  33      1 #> 167       C6      B  33      1 #> 168       C8      D  33      1 #> 169       C9      A  33      1 #> 170      C11      B  33      1 #> 171      C11      B  33      1 #> 172      C12      C  33      1 #> 173      C12      C  33      1 #> 174      C12      C  33      1 #> 175      C12      C  33      1 #> 176      C14      A  33      1 #> 177      C15      C  33      1 #> 178      C15      C  33      1 #> 179       C2      A  33      1 #> 180       C2      A  33      1 #> 181       C1      B  34      1 #> 182       C1      B  34      1 #> 183       C1      B  34      1 #> 184       C2      A  34      1 #> 185       C2      A  34      1 #> 186       C2      A  34      1 #> 187       C3      C  34      1 #> 188       C3      C  34      1 #> 189       C3      C  34      1 #> 190       C3      C  34      1 #> 191       C3      C  34      1 #> 192       C5      D  34      1 #> 193       C5      D  34      1 #> 194       C5      D  34      1 #> 195       C5      D  34      1 #> 196       C6      B  34      1 #> 197       C6      B  34      1 #> 198       C8      D  34      1 #> 199       C8      D  34      1 #> 200       C9      A  34      1 #> 201       C9      A  34      1 #> 202      C11      B  34      1 #> 203      C12      C  34      1 #> 204      C12      C  34      1 #> 205      C14      A  34      1 #> 206      C15      C  34      1 #> 207       C8      D  34      1 #> 208       C1      B  35      1 #> 209       C1      B  35      1 #> 210       C1      B  35      1 #> 211       C2      A  35      1 #> 212       C2      A  35      1 #> 213       C2      A  35      1 #> 214       C2      A  35      1 #> 215       C2      A  35      1 #> 216       C3      C  35      1 #> 217       C3      C  35      1 #> 218       C3      C  35      1 #> 219       C4      D  35      1 #> 220       C4      D  35      1 #> 221       C4      D  35      1 #> 222       C5      D  35      1 #> 223       C5      D  35      1 #> 224       C5      D  35      1 #> 225       C5      D  35      1 #> 226       C5      D  35      1 #> 227       C6      B  35      1 #> 228       C6      B  35      1 #> 229       C6      B  35      1 #> 230       C8      D  35      1 #> 231       C8      D  35      1 #> 232       C8      D  35      1 #> 233       C8      D  35      1 #> 234       C8      D  35      1 #> 235       C9      A  35      1 #> 236       C9      A  35      1 #> 237      C11      B  35      1 #> 238      C11      B  35      1 #> 239      C12      C  35      1 #> 240      C12      C  35      1 #> 241      C14      A  35      1 #> 242      C15      C  35      1 #> 243      C15      C  35      1 #> 244      C15      C  35      1 #> 245      C15      C  35      1 #> 246      C15      C  35      1 #> 247       C1      B  36      1 #> 248       C1      B  36      1 #> 249       C2      A  36      1 #> 250       C2      A  36      1 #> 251       C2      A  36      1 #> 252       C2      A  36      1 #> 253       C3      C  36      1 #> 254       C3      C  36      1 #> 255       C4      D  36      1 #> 256       C4      D  36      1 #> 257       C4      D  36      1 #> 258       C5      D  36      1 #> 259       C5      D  36      1 #> 260       C6      B  36      1 #> 261       C8      D  36      1 #> 262       C8      D  36      1 #> 263       C9      A  36      1 #> 264      C11      B  36      1 #> 265      C12      C  36      1 #> 266      C12      C  36      1 #> 267      C14      A  36      1 #> 268      C14      A  36      1 #> 269      C14      A  36      1 #> 270      C14      A  36      1 #> 271      C15      C  36      1 #> 272      C15      C  36      1 #> 273       C2      A  36      1 #> 274       C4      D  36      1 #> 275       C9      A  36      1 #> 276       C1      B  37      1 #> 277       C1      B  37      1 #> 278       C2      A  37      1 #> 279       C2      A  37      1 #> 280       C3      C  37      1 #> 281       C3      C  37      1 #> 282       C4      D  37      1 #> 283       C5      D  37      1 #> 284       C5      D  37      1 #> 285       C6      B  37      1 #> 286       C6      B  37      1 #> 287       C6      B  37      1 #> 288       C8      D  37      1 #> 289       C9      A  37      1 #> 290       C9      A  37      1 #> 291      C12      C  37      1 #> 292      C12      C  37      1 #> 293      C14      A  37      1 #> 294      C14      A  37      1 #> 295      C14      A  37      1 #> 296      C14      A  37      1 #> 297      C15      C  37      1 #> 298      C15      C  37      1 #> 299      C11      B  37      1 #> 300       C1      B  38      1 #> 301       C2      A  38      1 #> 302       C3      C  38      1 #> 303       C4      D  38      1 #> 304       C4      D  38      1 #> 305       C5      D  38      1 #> 306       C6      B  38      1 #> 307       C8      D  38      1 #> 308      C14      A  38      1 #> 309      C14      A  38      1 #> 310      C15      C  38      1 #> 311      C15      C  38      1 #> 312       C4      D  38      1 #> 313       C8      D  38      1 #> 314       C8      D  38      1 #> 315      C11      B  38      1 #> 316      C15      C  38      1 #> 317       C5      D  39      1 #> 318       C8      D  39      1 #> 319       C8      D  39      1 #> 320       C8      D  39      1 #> 321      C12      C  39      1 #> 322      C14      A  39      1 #> 323      C14      A  39      1 #> 324      C15      C  39      1 #> 325       C2      A  39      1 #> 326       C3      C  39      1 #> 327       C8      D  39      1 #> 328      C14      A  39      1 #> 329       C2      A  40      1 #> 330       C2      A  40      1 #> 331       C4      D  40      1 #> 332       C8      D  40      1 #> 333       C9      A  40      1 #> 334      C14      A  40      1 #> 335      C14      A  40      1 #> 336      C15      C  40      1 #> 337       C1      B  40      1 #> 338       C1      B  40      1 #> 339       C9      A  40      1 #> 340      C11      B  40      1 #> 341       C1      B  41      1 #> 342       C1      B  41      1 #> 343      C12      C  41      1 #> 344      C12      C  41      1 #> 345      C14      A  41      1 #> 346      C14      A  41      1 #> 347      C15      C  41      1 #> 348       C1      B  42      1 #> 349       C8      D  42      1 #> 350       C1      B  43      1 #> 351       C1      B  43      1 #> 352       C9      A  43      1 #> 353      C14      A  43      1 #> 354      C15      C  43      1 #> 355      C11      B  43      1 #> 356       C9      A  44      1 #> 357       C9      A  44      1 #> 358      C12      C  44      1 #> 359       C4      D  45      1 #> 360       C4      D  45      1 #> 361       C9      A  45      1 #> 362      C15      C  45      1 #> 363      C15      C  45      1 #> 364       C9      A  45      1 #> 365      C14      A  45      1 #> 366      C14      A  45      1 #> 367      C14      A  45      1 #> 368      C15      C  45      1 #> 369       C9      A  45      1 #> 370       C4      D  46      1 #> 371       C9      A  46      1 #> 372       C2      A  47      1 #> 373       C4      D  47      1 #> 374       C5      D  47      1 #> 375      C14      A  47      1 #> 376      C14      A  47      1 #> 377      C14      A  47      1 #> 378       C2      A  48      1 #> 379       C4      D  48      1 #> 380       C6      B  48      1 #> 381       C8      D  48      1 #> 382       C9      A  48      1 #> 383       C9      A  48      1 #> 384       C9      A  48      1 #> 385      C14      A  48      1 #> 386      C14      A  48      1 #> 387      C15      C  48      1 #> 388       C1      B  49      1 #> 389       C9      A  49      1 #> 390       C9      A  49      1 #> 391      C14      A  49      1 #> 392      C15      C  49      1 #> 393      C15      C  49      1 #> 394       C9      A  50      1 #> 395      C14      A  50      1 #> 396       C3      C  51      1 #> 397       C5      D  51      1 #> 398       C2      A  54      1 #> 399       C8      D  54      1 #> 400      C14      A  54      0 #> 401      C14      A  54      0 #> 402      C14      A  54      0 #> 403      C14      A  54      0 #> 404      C14      A  54      0 #> 405      C14      A  54      0 #> 406      C14      A  54      0 #> 407      C14      A  54      0 #> 408      C14      A  54      0 #> 409      C14      A  54      0 #> 410      C14      A  54      0 #> 411      C14      A  54      0 #> 412      C14      A  54      0 #> 413      C14      A  54      0 #> 414      C14      A  54      0 #> 415      C14      A  54      0 #> 416      C14      A  54      0 #> 417      C14      A  54      0 #> 418      C14      A  54      0 #> 419      C14      A  54      0 #> 420      C14      A  54      0 #> 421      C14      A  54      0 #> 422      C14      A  54      0 #> 423      C14      A  54      0 #> 424      C14      A  54      0 #> 425      C14      A  54      0 #> 426      C14      A  54      0 #> 427      C14      A  54      0 #> 428      C14      A  54      0 #> 429      C14      A  54      0 #> 430      C14      A  54      0 #> 431      C14      A  54      0 #> 432      C14      A  54      0 #> 433      C14      A  54      0 #> 434      C14      A  54      0 #> 435      C14      A  54      0 #> 436      C14      A  54      0 #> 437      C14      A  54      0 #> 438      C14      A  54      0 #> 439      C14      A  54      0 #> 440      C14      A  54      0 #> 441      C14      A  54      0 #> 442      C14      A  54      0 #> 443      C14      A  54      0 #> 444      C14      A  54      0 #> 445      C14      A  54      0 #> 446      C14      A  54      0 #> 447      C14      A  54      0 #> 448      C14      A  54      0 #> 449      C14      A  54      0 #> 450      C14      A  54      0 #> 451      C14      A  54      0 #> 452      C14      A  54      0 #> 453      C14      A  54      0 #> 454      C14      A  54      0 #> 455      C14      A  54      0 #> 456      C14      A  54      0 #> 457      C14      A  54      0 #> 458      C14      A  54      0 #> 459      C14      A  54      0 #> 460      C14      A  54      0 #> 461      C14      A  54      0 #> 462      C14      A  54      0 #> 463      C14      A  54      0 #> 464      C14      A  54      0 #> 465       C2      A  54      0 #> 466       C2      A  54      0 #> 467       C2      A  54      0 #> 468       C2      A  54      0 #> 469       C2      A  54      0 #> 470       C2      A  54      0 #> 471       C2      A  54      0 #> 472       C2      A  54      0 #> 473       C2      A  54      0 #> 474       C2      A  54      0 #> 475       C2      A  54      0 #> 476       C2      A  54      0 #> 477       C2      A  54      0 #> 478       C2      A  54      0 #> 479       C2      A  54      0 #> 480       C2      A  54      0 #> 481       C2      A  54      0 #> 482       C2      A  54      0 #> 483       C2      A  54      0 #> 484       C2      A  54      0 #> 485       C2      A  54      0 #> 486       C2      A  54      0 #> 487       C2      A  54      0 #> 488       C2      A  54      0 #> 489       C2      A  54      0 #> 490       C2      A  54      0 #> 491       C2      A  54      0 #> 492       C2      A  54      0 #> 493       C2      A  54      0 #> 494       C2      A  54      0 #> 495       C2      A  54      0 #> 496       C2      A  54      0 #> 497       C2      A  54      0 #> 498       C2      A  54      0 #> 499       C2      A  54      0 #> 500       C2      A  54      0 #> 501       C2      A  54      0 #> 502       C2      A  54      0 #> 503       C2      A  54      0 #> 504       C2      A  54      0 #> 505       C2      A  54      0 #> 506       C2      A  54      0 #> 507       C2      A  54      0 #> 508       C2      A  54      0 #> 509       C2      A  54      0 #> 510       C2      A  54      0 #> 511       C2      A  54      0 #> 512       C2      A  54      0 #> 513       C2      A  54      0 #> 514       C2      A  54      0 #> 515       C2      A  54      0 #> 516       C2      A  54      0 #> 517       C2      A  54      0 #> 518       C2      A  54      0 #> 519       C2      A  54      0 #> 520       C2      A  54      0 #> 521       C2      A  54      0 #> 522       C2      A  54      0 #> 523       C2      A  54      0 #> 524       C2      A  54      0 #> 525       C2      A  54      0 #> 526       C9      A  54      0 #> 527       C9      A  54      0 #> 528       C9      A  54      0 #> 529       C9      A  54      0 #> 530       C9      A  54      0 #> 531       C9      A  54      0 #> 532       C9      A  54      0 #> 533       C9      A  54      0 #> 534       C9      A  54      0 #> 535       C9      A  54      0 #> 536       C9      A  54      0 #> 537       C9      A  54      0 #> 538       C9      A  54      0 #> 539       C9      A  54      0 #> 540       C9      A  54      0 #> 541       C9      A  54      0 #> 542       C9      A  54      0 #> 543       C9      A  54      0 #> 544       C9      A  54      0 #> 545       C9      A  54      0 #> 546       C9      A  54      0 #> 547       C9      A  54      0 #> 548       C9      A  54      0 #> 549       C9      A  54      0 #> 550       C9      A  54      0 #> 551       C9      A  54      0 #> 552       C9      A  54      0 #> 553       C9      A  54      0 #> 554       C9      A  54      0 #> 555       C9      A  54      0 #> 556       C9      A  54      0 #> 557       C9      A  54      0 #> 558       C9      A  54      0 #> 559       C9      A  54      0 #> 560       C9      A  54      0 #> 561       C9      A  54      0 #> 562       C9      A  54      0 #> 563       C9      A  54      0 #> 564       C9      A  54      0 #> 565       C9      A  54      0 #> 566       C9      A  54      0 #> 567       C9      A  54      0 #> 568       C9      A  54      0 #> 569       C9      A  54      0 #> 570       C9      A  54      0 #> 571       C9      A  54      0 #> 572       C9      A  54      0 #> 573       C9      A  54      0 #> 574       C9      A  54      0 #> 575       C9      A  54      0 #> 576       C9      A  54      0 #> 577       C9      A  54      0 #> 578       C9      A  54      0 #> 579       C9      A  54      0 #> 580       C9      A  54      0 #> 581       C9      A  54      0 #> 582       C9      A  54      0 #> 583       C9      A  54      0 #> 584       C9      A  54      0 #> 585       C9      A  54      0 #> 586       C9      A  54      0 #> 587       C9      A  54      0 #> 588       C9      A  54      0 #> 589       C9      A  54      0 #> 590       C9      A  54      0 #> 591       C9      A  54      0 #> 592       C9      A  54      0 #> 593       C1      B  54      0 #> 594       C1      B  54      0 #> 595       C1      B  54      0 #> 596       C1      B  54      0 #> 597       C1      B  54      0 #> 598       C1      B  54      0 #> 599       C1      B  54      0 #> 600       C1      B  54      0 #> 601       C1      B  54      0 #> 602       C1      B  54      0 #> 603       C1      B  54      0 #> 604       C1      B  54      0 #> 605       C1      B  54      0 #> 606       C1      B  54      0 #> 607       C1      B  54      0 #> 608       C1      B  54      0 #> 609       C1      B  54      0 #> 610       C1      B  54      0 #> 611       C1      B  54      0 #> 612       C1      B  54      0 #> 613       C1      B  54      0 #> 614       C1      B  54      0 #> 615       C1      B  54      0 #> 616       C1      B  54      0 #> 617       C1      B  54      0 #> 618       C1      B  54      0 #> 619       C1      B  54      0 #> 620       C1      B  54      0 #> 621       C1      B  54      0 #> 622       C1      B  54      0 #> 623       C1      B  54      0 #> 624       C1      B  54      0 #> 625       C1      B  54      0 #> 626       C1      B  54      0 #> 627       C1      B  54      0 #> 628       C1      B  54      0 #> 629       C1      B  54      0 #> 630       C1      B  54      0 #> 631       C1      B  54      0 #> 632       C1      B  54      0 #> 633       C1      B  54      0 #> 634       C1      B  54      0 #> 635       C1      B  54      0 #> 636       C1      B  54      0 #> 637       C1      B  54      0 #> 638       C1      B  54      0 #> 639       C1      B  54      0 #> 640       C1      B  54      0 #> 641       C1      B  54      0 #> 642       C1      B  54      0 #> 643       C1      B  54      0 #> 644       C1      B  54      0 #> 645       C1      B  54      0 #> 646       C1      B  54      0 #> 647       C1      B  54      0 #> 648       C1      B  54      0 #> 649       C1      B  54      0 #> 650       C1      B  54      0 #> 651       C1      B  54      0 #> 652       C1      B  54      0 #> 653       C1      B  54      0 #> 654       C1      B  54      0 #> 655       C1      B  54      0 #> 656      C11      B  54      0 #> 657      C11      B  54      0 #> 658      C11      B  54      0 #> 659      C11      B  54      0 #> 660      C11      B  54      0 #> 661      C11      B  54      0 #> 662      C11      B  54      0 #> 663      C11      B  54      0 #> 664      C11      B  54      0 #> 665      C11      B  54      0 #> 666      C11      B  54      0 #> 667      C11      B  54      0 #> 668      C11      B  54      0 #> 669      C11      B  54      0 #> 670      C11      B  54      0 #> 671      C11      B  54      0 #> 672      C11      B  54      0 #> 673      C11      B  54      0 #> 674      C11      B  54      0 #> 675      C11      B  54      0 #> 676      C11      B  54      0 #> 677      C11      B  54      0 #> 678      C11      B  54      0 #> 679      C11      B  54      0 #> 680      C11      B  54      0 #> 681      C11      B  54      0 #> 682      C11      B  54      0 #> 683      C11      B  54      0 #> 684      C11      B  54      0 #> 685      C11      B  54      0 #> 686      C11      B  54      0 #> 687      C11      B  54      0 #> 688      C11      B  54      0 #> 689      C11      B  54      0 #> 690      C11      B  54      0 #> 691      C11      B  54      0 #> 692      C11      B  54      0 #> 693      C11      B  54      0 #> 694      C11      B  54      0 #> 695      C11      B  54      0 #> 696      C11      B  54      0 #> 697      C11      B  54      0 #> 698      C11      B  54      0 #> 699      C11      B  54      0 #> 700      C11      B  54      0 #> 701      C11      B  54      0 #> 702      C11      B  54      0 #> 703      C11      B  54      0 #> 704      C11      B  54      0 #> 705      C11      B  54      0 #> 706      C11      B  54      0 #> 707      C11      B  54      0 #> 708      C11      B  54      0 #> 709      C11      B  54      0 #> 710      C11      B  54      0 #> 711      C11      B  54      0 #> 712      C11      B  54      0 #> 713      C11      B  54      0 #> 714      C11      B  54      0 #> 715      C11      B  54      0 #> 716      C11      B  54      0 #> 717      C11      B  54      0 #> 718      C11      B  54      0 #> 719      C11      B  54      0 #> 720       C6      B  54      0 #> 721       C6      B  54      0 #> 722       C6      B  54      0 #> 723       C6      B  54      0 #> 724       C6      B  54      0 #> 725       C6      B  54      0 #> 726       C6      B  54      0 #> 727       C6      B  54      0 #> 728       C6      B  54      0 #> 729       C6      B  54      0 #> 730       C6      B  54      0 #> 731       C6      B  54      0 #> 732       C6      B  54      0 #> 733       C6      B  54      0 #> 734       C6      B  54      0 #> 735       C6      B  54      0 #> 736       C6      B  54      0 #> 737       C6      B  54      0 #> 738       C6      B  54      0 #> 739       C6      B  54      0 #> 740       C6      B  54      0 #> 741       C6      B  54      0 #> 742       C6      B  54      0 #> 743       C6      B  54      0 #> 744       C6      B  54      0 #> 745       C6      B  54      0 #> 746       C6      B  54      0 #> 747       C6      B  54      0 #> 748       C6      B  54      0 #> 749       C6      B  54      0 #> 750       C6      B  54      0 #> 751       C6      B  54      0 #> 752       C6      B  54      0 #> 753       C6      B  54      0 #> 754       C6      B  54      0 #> 755       C6      B  54      0 #> 756       C6      B  54      0 #> 757       C6      B  54      0 #> 758       C6      B  54      0 #> 759       C6      B  54      0 #> 760       C6      B  54      0 #> 761       C6      B  54      0 #> 762       C6      B  54      0 #> 763       C6      B  54      0 #> 764       C6      B  54      0 #> 765       C6      B  54      0 #> 766       C6      B  54      0 #> 767       C6      B  54      0 #> 768       C6      B  54      0 #> 769       C6      B  54      0 #> 770       C6      B  54      0 #> 771       C6      B  54      0 #> 772       C6      B  54      0 #> 773       C6      B  54      0 #> 774       C6      B  54      0 #> 775       C6      B  54      0 #> 776       C6      B  54      0 #> 777       C6      B  54      0 #> 778       C6      B  54      0 #> 779       C6      B  54      0 #> 780       C6      B  54      0 #> 781       C6      B  54      0 #> 782       C6      B  54      0 #> 783       C6      B  54      0 #> 784       C6      B  54      0 #> 785      C12      C  54      0 #> 786      C12      C  54      0 #> 787      C12      C  54      0 #> 788      C12      C  54      0 #> 789      C12      C  54      0 #> 790      C12      C  54      0 #> 791      C12      C  54      0 #> 792      C12      C  54      0 #> 793      C12      C  54      0 #> 794      C12      C  54      0 #> 795      C12      C  54      0 #> 796      C12      C  54      0 #> 797      C12      C  54      0 #> 798      C12      C  54      0 #> 799      C12      C  54      0 #> 800      C12      C  54      0 #> 801      C12      C  54      0 #> 802      C12      C  54      0 #> 803      C12      C  54      0 #> 804      C12      C  54      0 #> 805      C12      C  54      0 #> 806      C12      C  54      0 #> 807      C12      C  54      0 #> 808      C12      C  54      0 #> 809      C12      C  54      0 #> 810      C12      C  54      0 #> 811      C12      C  54      0 #> 812      C12      C  54      0 #> 813      C12      C  54      0 #> 814      C12      C  54      0 #> 815      C12      C  54      0 #> 816      C12      C  54      0 #> 817      C12      C  54      0 #> 818      C12      C  54      0 #> 819      C12      C  54      0 #> 820      C12      C  54      0 #> 821      C12      C  54      0 #> 822      C12      C  54      0 #> 823      C12      C  54      0 #> 824      C12      C  54      0 #> 825      C12      C  54      0 #> 826      C12      C  54      0 #> 827      C12      C  54      0 #> 828      C12      C  54      0 #> 829      C12      C  54      0 #> 830      C12      C  54      0 #> 831      C12      C  54      0 #> 832      C12      C  54      0 #> 833      C12      C  54      0 #> 834      C12      C  54      0 #> 835      C12      C  54      0 #> 836      C12      C  54      0 #> 837      C12      C  54      0 #> 838      C12      C  54      0 #> 839      C12      C  54      0 #> 840      C12      C  54      0 #> 841      C12      C  54      0 #> 842      C12      C  54      0 #> 843      C12      C  54      0 #> 844      C12      C  54      0 #> 845      C12      C  54      0 #> 846      C12      C  54      0 #> 847      C12      C  54      0 #> 848      C12      C  54      0 #> 849      C12      C  54      0 #> 850      C12      C  54      0 #> 851      C12      C  54      0 #> 852      C12      C  54      0 #> 853      C12      C  54      0 #> 854      C12      C  54      0 #> 855      C12      C  54      0 #> 856      C12      C  54      0 #> 857      C12      C  54      0 #> 858      C15      C  54      0 #> 859      C15      C  54      0 #> 860      C15      C  54      0 #> 861      C15      C  54      0 #> 862      C15      C  54      0 #> 863      C15      C  54      0 #> 864      C15      C  54      0 #> 865      C15      C  54      0 #> 866      C15      C  54      0 #> 867      C15      C  54      0 #> 868      C15      C  54      0 #> 869      C15      C  54      0 #> 870      C15      C  54      0 #> 871      C15      C  54      0 #> 872      C15      C  54      0 #> 873      C15      C  54      0 #> 874      C15      C  54      0 #> 875      C15      C  54      0 #> 876      C15      C  54      0 #> 877      C15      C  54      0 #> 878      C15      C  54      0 #> 879      C15      C  54      0 #> 880      C15      C  54      0 #> 881      C15      C  54      0 #> 882      C15      C  54      0 #> 883      C15      C  54      0 #> 884      C15      C  54      0 #> 885      C15      C  54      0 #> 886      C15      C  54      0 #> 887      C15      C  54      0 #> 888      C15      C  54      0 #> 889      C15      C  54      0 #> 890      C15      C  54      0 #> 891      C15      C  54      0 #> 892      C15      C  54      0 #> 893      C15      C  54      0 #> 894      C15      C  54      0 #> 895      C15      C  54      0 #> 896      C15      C  54      0 #> 897      C15      C  54      0 #> 898      C15      C  54      0 #> 899      C15      C  54      0 #> 900      C15      C  54      0 #> 901      C15      C  54      0 #> 902      C15      C  54      0 #> 903      C15      C  54      0 #> 904      C15      C  54      0 #> 905      C15      C  54      0 #> 906      C15      C  54      0 #> 907      C15      C  54      0 #> 908      C15      C  54      0 #> 909      C15      C  54      0 #> 910      C15      C  54      0 #> 911      C15      C  54      0 #> 912      C15      C  54      0 #> 913      C15      C  54      0 #> 914      C15      C  54      0 #> 915      C15      C  54      0 #> 916      C15      C  54      0 #> 917      C15      C  54      0 #> 918      C15      C  54      0 #> 919      C15      C  54      0 #> 920      C15      C  54      0 #> 921      C15      C  54      0 #> 922      C15      C  54      0 #> 923      C15      C  54      0 #> 924      C15      C  54      0 #> 925      C15      C  54      0 #> 926      C15      C  54      0 #> 927      C15      C  54      0 #> 928       C3      C  54      0 #> 929       C3      C  54      0 #> 930       C3      C  54      0 #> 931       C3      C  54      0 #> 932       C3      C  54      0 #> 933       C3      C  54      0 #> 934       C3      C  54      0 #> 935       C3      C  54      0 #> 936       C3      C  54      0 #> 937       C3      C  54      0 #> 938       C3      C  54      0 #> 939       C3      C  54      0 #> 940       C3      C  54      0 #> 941       C3      C  54      0 #> 942       C3      C  54      0 #> 943       C3      C  54      0 #> 944       C3      C  54      0 #> 945       C3      C  54      0 #> 946       C3      C  54      0 #> 947       C3      C  54      0 #> 948       C3      C  54      0 #> 949       C3      C  54      0 #> 950       C3      C  54      0 #> 951       C3      C  54      0 #> 952       C3      C  54      0 #> 953       C3      C  54      0 #> 954       C3      C  54      0 #> 955       C3      C  54      0 #> 956       C3      C  54      0 #> 957       C3      C  54      0 #> 958       C3      C  54      0 #> 959       C3      C  54      0 #> 960       C3      C  54      0 #> 961       C3      C  54      0 #> 962       C3      C  54      0 #> 963       C3      C  54      0 #> 964       C3      C  54      0 #> 965       C3      C  54      0 #> 966       C3      C  54      0 #> 967       C3      C  54      0 #> 968       C3      C  54      0 #> 969       C3      C  54      0 #> 970       C3      C  54      0 #> 971       C3      C  54      0 #> 972       C3      C  54      0 #> 973       C3      C  54      0 #> 974       C3      C  54      0 #> 975       C3      C  54      0 #> 976       C3      C  54      0 #> 977       C3      C  54      0 #> 978       C3      C  54      0 #> 979       C3      C  54      0 #> 980       C3      C  54      0 #> 981       C3      C  54      0 #> 982       C3      C  54      0 #> 983       C3      C  54      0 #> 984       C3      C  54      0 #> 985       C3      C  54      0 #> 986       C3      C  54      0 #> 987       C3      C  54      0 #> 988       C3      C  54      0 #> 989       C3      C  54      0 #> 990       C3      C  54      0 #> 991       C3      C  54      0 #> 992       C3      C  54      0 #> 993       C3      C  54      0 #> 994       C3      C  54      0 #> 995       C3      C  54      0 #> 996       C3      C  54      0 #> 997       C4      D  54      0 #> 998       C4      D  54      0 #> 999       C4      D  54      0 #> 1000      C4      D  54      0 #> 1001      C4      D  54      0 #> 1002      C4      D  54      0 #> 1003      C4      D  54      0 #> 1004      C4      D  54      0 #> 1005      C4      D  54      0 #> 1006      C4      D  54      0 #> 1007      C4      D  54      0 #> 1008      C4      D  54      0 #> 1009      C4      D  54      0 #> 1010      C4      D  54      0 #> 1011      C4      D  54      0 #> 1012      C4      D  54      0 #> 1013      C4      D  54      0 #> 1014      C4      D  54      0 #> 1015      C4      D  54      0 #> 1016      C4      D  54      0 #> 1017      C4      D  54      0 #> 1018      C4      D  54      0 #> 1019      C4      D  54      0 #> 1020      C4      D  54      0 #> 1021      C4      D  54      0 #> 1022      C4      D  54      0 #> 1023      C4      D  54      0 #> 1024      C4      D  54      0 #> 1025      C4      D  54      0 #> 1026      C4      D  54      0 #> 1027      C4      D  54      0 #> 1028      C4      D  54      0 #> 1029      C4      D  54      0 #> 1030      C4      D  54      0 #> 1031      C4      D  54      0 #> 1032      C4      D  54      0 #> 1033      C4      D  54      0 #> 1034      C4      D  54      0 #> 1035      C4      D  54      0 #> 1036      C4      D  54      0 #> 1037      C4      D  54      0 #> 1038      C4      D  54      0 #> 1039      C4      D  54      0 #> 1040      C4      D  54      0 #> 1041      C4      D  54      0 #> 1042      C4      D  54      0 #> 1043      C4      D  54      0 #> 1044      C4      D  54      0 #> 1045      C4      D  54      0 #> 1046      C4      D  54      0 #> 1047      C4      D  54      0 #> 1048      C4      D  54      0 #> 1049      C4      D  54      0 #> 1050      C4      D  54      0 #> 1051      C4      D  54      0 #> 1052      C4      D  54      0 #> 1053      C4      D  54      0 #> 1054      C4      D  54      0 #> 1055      C4      D  54      0 #> 1056      C4      D  54      0 #> 1057      C4      D  54      0 #> 1058      C4      D  54      0 #> 1059      C4      D  54      0 #> 1060      C4      D  54      0 #> 1061      C4      D  54      0 #> 1062      C5      D  54      0 #> 1063      C5      D  54      0 #> 1064      C5      D  54      0 #> 1065      C5      D  54      0 #> 1066      C5      D  54      0 #> 1067      C5      D  54      0 #> 1068      C5      D  54      0 #> 1069      C5      D  54      0 #> 1070      C5      D  54      0 #> 1071      C5      D  54      0 #> 1072      C5      D  54      0 #> 1073      C5      D  54      0 #> 1074      C5      D  54      0 #> 1075      C5      D  54      0 #> 1076      C5      D  54      0 #> 1077      C5      D  54      0 #> 1078      C5      D  54      0 #> 1079      C5      D  54      0 #> 1080      C5      D  54      0 #> 1081      C5      D  54      0 #> 1082      C5      D  54      0 #> 1083      C5      D  54      0 #> 1084      C5      D  54      0 #> 1085      C5      D  54      0 #> 1086      C5      D  54      0 #> 1087      C5      D  54      0 #> 1088      C5      D  54      0 #> 1089      C5      D  54      0 #> 1090      C5      D  54      0 #> 1091      C5      D  54      0 #> 1092      C5      D  54      0 #> 1093      C5      D  54      0 #> 1094      C5      D  54      0 #> 1095      C5      D  54      0 #> 1096      C5      D  54      0 #> 1097      C5      D  54      0 #> 1098      C5      D  54      0 #> 1099      C5      D  54      0 #> 1100      C5      D  54      0 #> 1101      C5      D  54      0 #> 1102      C5      D  54      0 #> 1103      C5      D  54      0 #> 1104      C5      D  54      0 #> 1105      C5      D  54      0 #> 1106      C5      D  54      0 #> 1107      C5      D  54      0 #> 1108      C5      D  54      0 #> 1109      C5      D  54      0 #> 1110      C5      D  54      0 #> 1111      C5      D  54      0 #> 1112      C5      D  54      0 #> 1113      C5      D  54      0 #> 1114      C5      D  54      0 #> 1115      C5      D  54      0 #> 1116      C5      D  54      0 #> 1117      C5      D  54      0 #> 1118      C5      D  54      0 #> 1119      C5      D  54      0 #> 1120      C5      D  54      0 #> 1121      C5      D  54      0 #> 1122      C5      D  54      0 #> 1123      C5      D  54      0 #> 1124      C5      D  54      0 #> 1125      C5      D  54      0 #> 1126      C5      D  54      0 #> 1127      C5      D  54      0 #> 1128      C5      D  54      0 #> 1129      C5      D  54      0 #> 1130      C5      D  54      0 #> 1131      C5      D  54      0 #> 1132      C5      D  54      0 #> 1133      C5      D  54      0 #> 1134      C5      D  54      0 #> 1135      C8      D  54      0 #> 1136      C8      D  54      0 #> 1137      C8      D  54      0 #> 1138      C8      D  54      0 #> 1139      C8      D  54      0 #> 1140      C8      D  54      0 #> 1141      C8      D  54      0 #> 1142      C8      D  54      0 #> 1143      C8      D  54      0 #> 1144      C8      D  54      0 #> 1145      C8      D  54      0 #> 1146      C8      D  54      0 #> 1147      C8      D  54      0 #> 1148      C8      D  54      0 #> 1149      C8      D  54      0 #> 1150      C8      D  54      0 #> 1151      C8      D  54      0 #> 1152      C8      D  54      0 #> 1153      C8      D  54      0 #> 1154      C8      D  54      0 #> 1155      C8      D  54      0 #> 1156      C8      D  54      0 #> 1157      C8      D  54      0 #> 1158      C8      D  54      0 #> 1159      C8      D  54      0 #> 1160      C8      D  54      0 #> 1161      C8      D  54      0 #> 1162      C8      D  54      0 #> 1163      C8      D  54      0 #> 1164      C8      D  54      0 #> 1165      C8      D  54      0 #> 1166      C8      D  54      0 #> 1167      C8      D  54      0 #> 1168      C8      D  54      0 #> 1169      C8      D  54      0 #> 1170      C8      D  54      0 #> 1171      C8      D  54      0 #> 1172      C8      D  54      0 #> 1173      C8      D  54      0 #> 1174      C8      D  54      0 #> 1175      C8      D  54      0 #> 1176      C8      D  54      0 #> 1177      C8      D  54      0 #> 1178      C8      D  54      0 #> 1179      C8      D  54      0 #> 1180      C8      D  54      0 #> 1181      C8      D  54      0 #> 1182      C8      D  54      0 #> 1183      C8      D  54      0 #> 1184      C8      D  54      0 #> 1185      C8      D  54      0 #> 1186      C8      D  54      0 #> 1187      C8      D  54      0 #> 1188      C8      D  54      0 #> 1189      C8      D  54      0 #> 1190      C8      D  54      0 #> 1191      C8      D  54      0 #> 1192      C8      D  54      0 #> 1193      C8      D  54      0 #> 1194      C8      D  54      0 #> 1195      C8      D  54      0 #> 1196      C8      D  54      0 #> 1197      C8      D  54      0 #> 1198      C8      D  54      0 #> 1199      C8      D  54      0 #> 1200      C8      D  54      0 #> 1201     C99      A  54      0 #> 1202     C99      A  54      0 #> 1203     C99      A  54      0 #> 1204     C99      A  54      0 #> 1205     C99      A  54      0 #> 1206     C99      A  54      0 #> 1207     C99      A  54      0 #> 1208     C99      A  54      0 #> 1209     C99      A  54      0 #> 1210     C99      A  54      0 #> 1211     C99      A  54      0 #> 1212     C99      A  54      0 #> 1213     C99      A  54      0 #> 1214     C99      A  54      0 #> 1215     C99      A  54      0 #> 1216     C99      A  54      0 #> 1217     C99      A  54      0 #> 1218     C99      A  54      0 #> 1219     C99      A  54      0 #> 1220     C99      A  54      0 #> 1221     C99      A  54      0 #> 1222     C99      A  54      0 #> 1223     C99      A  54      0 #> 1224     C99      A  54      0 #> 1225     C99      A  54      0 #> 1226     C99      A  54      0 #> 1227     C99      A  54      0 #> 1228     C99      A  54      0 #> 1229     C99      A  54      0 #> 1230     C99      A  54      0 #> 1231     C99      A  54      0 #> 1232     C99      A  54      0 #> 1233     C99      A  54      0 #> 1234     C99      A  54      0 #> 1235     C99      A  54      0 #> 1236     C99      A  54      0 #> 1237     C99      A  54      0 #> 1238     C99      A  54      0 #> 1239     C99      A  54      0 #> 1240     C99      A  54      0 #> 1241     C99      A  54      0 #> 1242     C99      A  54      0 #> 1243     C99      A  54      0 #> 1244     C99      A  54      0 #> 1245     C99      A  54      0 #> 1246     C99      A  54      0 #> 1247     C99      A  54      0 #> 1248     C99      A  54      0 #> 1249     C99      A  54      0 #> 1250     C99      A  54      0 #> 1251     C99      A  54      0 #> 1252     C99      A  54      0 #> 1253     C99      A  54      0 #> 1254     C99      A  54      0 #> 1255     C99      A  54      0 #> 1256     C99      A  54      0 #> 1257     C99      A  54      0 #> 1258     C99      A  54      0 #> 1259     C99      A  54      0 #> 1260     C99      A  54      0 #> 1261     C99      A  54      0 #> 1262     C99      A  54      0 #> 1263     C99      A  54      0 #> 1264     C99      A  54      0 #> 1265     C99      A  54      0 #> 1266     C99      A  54      0 #> 1267     C99      A  54      0 #> 1268     C99      A  54      0 #> 1269     C99      A  54      0 #> 1270     C99      A  54      0 #> 1271     C99      A  54      0 #> 1272     C99      A  54      0 #> 1273     C99      A  54      0 #> 1274     C99      A  54      0 #> 1275     C99      A  54      0 #> 1276     C99      A  54      0 #> 1277     C99      A  54      0 #> 1278     C99      A  54      0 #> 1279     C99      A  54      0 #> 1280     C99      A  54      0 #> 1281     C99      A  54      0 #> 1282     C99      A  54      0 #> 1283     C99      A  54      0 #> 1284     C99      A  54      0 #> 1285     C99      A  54      0 #> 1286     C99      A  54      0 #> 1287     C99      A  54      0 #> 1288     C99      A  54      0 #> 1289     C99      A  54      0 #> 1290     C99      A  54      0 #> 1291     C99      A  54      0 #> 1292     C99      A  54      0 #> 1293     C99      A  54      0 #> 1294     C99      A  54      0 #> 1295     C99      A  54      0 #> 1296     C99      A  54      0 #> 1297     C99      A  54      0 #> 1298     C99      A  54      0 #> 1299     C99      A  54      0 #> 1300     C99      A  54      0 #> 1301    C100      B  54      0 #> 1302    C100      B  54      0 #> 1303    C100      B  54      0 #> 1304    C100      B  54      0 #> 1305    C100      B  54      0 #> 1306    C100      B  54      0 #> 1307    C100      B  54      0 #> 1308    C100      B  54      0 #> 1309    C100      B  54      0 #> 1310    C100      B  54      0 #> 1311    C100      B  54      0 #> 1312    C100      B  54      0 #> 1313    C100      B  54      0 #> 1314    C100      B  54      0 #> 1315    C100      B  54      0 #> 1316    C100      B  54      0 #> 1317    C100      B  54      0 #> 1318    C100      B  54      0 #> 1319    C100      B  54      0 #> 1320    C100      B  54      0 #> 1321    C100      B  54      0 #> 1322    C100      B  54      0 #> 1323    C100      B  54      0 #> 1324    C100      B  54      0 #> 1325    C100      B  54      0 #> 1326    C100      B  54      0 #> 1327    C100      B  54      0 #> 1328    C100      B  54      0 #> 1329    C100      B  54      0 #> 1330    C100      B  54      0 #> 1331    C100      B  54      0 #> 1332    C100      B  54      0 #> 1333    C100      B  54      0 #> 1334    C100      B  54      0 #> 1335    C100      B  54      0 #> 1336    C100      B  54      0 #> 1337    C100      B  54      0 #> 1338    C100      B  54      0 #> 1339    C100      B  54      0 #> 1340    C100      B  54      0 #> 1341    C100      B  54      0 #> 1342    C100      B  54      0 #> 1343    C100      B  54      0 #> 1344    C100      B  54      0 #> 1345    C100      B  54      0 #> 1346    C100      B  54      0 #> 1347    C100      B  54      0 #> 1348    C100      B  54      0 #> 1349    C100      B  54      0 #> 1350    C100      B  54      0 #> 1351    C100      B  54      0 #> 1352    C100      B  54      0 #> 1353    C100      B  54      0 #> 1354    C100      B  54      0 #> 1355    C100      B  54      0 #> 1356    C100      B  54      0 #> 1357    C100      B  54      0 #> 1358    C100      B  54      0 #> 1359    C100      B  54      0 #> 1360    C100      B  54      0 #> 1361    C100      B  54      0 #> 1362    C100      B  54      0 #> 1363    C100      B  54      0 #> 1364    C100      B  54      0 #> 1365    C100      B  54      0 #> 1366    C100      B  54      0 #> 1367    C100      B  54      0 #> 1368    C100      B  54      0 #> 1369    C100      B  54      0 #> 1370    C100      B  54      0 #> 1371    C100      B  54      0 #> 1372    C100      B  54      0 #> 1373    C100      B  54      0 #> 1374    C100      B  54      0 #> 1375    C100      B  54      0 #> 1376    C100      B  54      0 #> 1377    C100      B  54      0 #> 1378    C100      B  54      0 #> 1379    C100      B  54      0 #> 1380    C100      B  54      0 #> 1381    C100      B  54      0 #> 1382    C100      B  54      0 #> 1383    C100      B  54      0 #> 1384    C100      B  54      0 #> 1385    C100      B  54      0 #> 1386    C100      B  54      0 #> 1387    C100      B  54      0 #> 1388    C100      B  54      0 #> 1389    C100      B  54      0 #> 1390    C100      B  54      0 #> 1391    C100      B  54      0 #> 1392    C100      B  54      0 #> 1393    C100      B  54      0 #> 1394    C100      B  54      0 #> 1395    C100      B  54      0 #> 1396    C100      B  54      0 #> 1397    C100      B  54      0 #> 1398    C100      B  54      0 #> 1399    C100      B  54      0 #> 1400    C100      B  54      0"},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Survival Plots — Surv_Plots","title":"Generate Survival Plots — Surv_Plots","text":"Produces Kaplan-Meier Survival Plot /Hazard Time Plot survival data. plot contains multiple curves different treatment groups. Plots saved automatically working directory.","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Survival Plots — Surv_Plots","text":"","code":"Surv_Plots(   surv_db,   plot_prefix = \"plot_prefix\",   xlim = NULL,   ylim = c(0, 1),   xlab = \"Days Post Challenge\",   lambda = NULL,   phi = NULL,   dailybin = TRUE,   plot = \"both\",   colours = NULL,   theme = \"ggplot\",   trt_order = NULL,   data_out = FALSE,   plot_dim = c(6, 4) )"},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Survival Plots — Surv_Plots","text":"surv_db survival dataframe described Details. plot_prefix string specifying prefix filename saved plots. xlim vector specifying plots x-axis lower upper limits, respectively. ylim vector specifying Survival Plot y-axis lower upper limits, respectively. xlab string specifying plot x-axis label. lambda Smoothing value hazard curve. Higher lambda produces greater smoothing. Defaults NULL bshazard() uses provided survival data estimate lambda; NULL specification recommended large sample size situations usually occurs full-scale studies many mortalities tank-replication. low sample sizes, lambda estimate can unreliable. Choosing lambda 10 (anywhere 1-100) probably produces accurate hazard curve situations. place choosing lambda, choosing phi recommended; see . phi Dispersion parameter count model used hazard curve estimation. Defaults NULL bshazard() uses provided survival data estimate phi; NULL specification recommended large sample size situations. low sample sizes, phi estimate can unreliable. Choosing phi value 1 low sample sizes recommended. value 1 (close) seems estimated past Tenaci data (QCATC997; phi ~ 0.8-1.4) large sample sizes tank-replication. phi value 1 indicates set counts (deaths) time Poisson distribution, following different hazard rates along curve overdispersed (phi > 1). dailybin Whether set time bins daily (1 TTE) intervals. Refer bshazard() documentation understanding role bins hazard curve estimation. Please set TRUE low sample sizes set FALSE large sample sizes tank-replication. Defaults TRUE. plot plot output. Use \"surv\" Kaplan-Meier Survival Curve, \"haz\" Hazard Curve, \"\" . Defaults \"\". colours Vector color codes different treatment groups plot. Defaults ggplot2 default palette. theme Character string specifying graphics theme plots. Theme \"ggplot2\" \"prism\" currently available. Defaults \"ggplot2\". trt_order Vector representing order treatment groups plots. Defaults NULL alphabetical order used. data_out Whether print survival /hazard databases illustrated plots. Defaults FALSE. plot_dim Vector representing dimensions (width, height) save plot .tiff .pptx.","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Survival Plots — Surv_Plots","text":"default, argument plot = \"\", returns Kaplan-Meier Survival Curve Hazard Curve. Output can trimmed setting plot = \"haz\" plot = \"surv\". data_out = TRUE, returns list plot(s) associated dataframes create .","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Plots.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Survival Plots — Surv_Plots","text":"survival dataset dataframe containing least 4 different columns: \"Trt.ID\" = Labels treatment groups study. \"Tank.ID\" = Labels tanks study (tank must unique label). \"TTE\" = Time Event. Event depends \"Status\". \"Status\" = Value indicating happened TTE. 1 dead fish, 0 survivors sampled removed. row represent one fish. example dataframe, execute data(surv_db_ex) view. details statistical methodology used bshazard(), refer : . General concept: h(t) hazard function considered count model number deaths response variable. .e, death_count(t) = h(t) * P(t) P(t) number alive function time h(t) modeled time using basis splines. basis spline curvatures assumed normal distribution mean 0 (random effect). Based assumption, author found variance curvatures (.e. smoothness) equal -dispersion (phi) death counts related (divided) smoothness parameter (lambda). Phi lambda can estimated data specified user. Specification can helpful low sample size situations overdispersion (phi) estimates found unreliable clearly wrong (based understanding realistic estimates estimated past data adequate, large sample sizes).","code":""},{"path":[]},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Survival Plots — Surv_Plots","text":"","code":"#Starting from an example mortality database, we first generate the complete survivor data using Surv_Gen() data(mort_db_ex) surv_dat = Surv_Gen(mort_db = mort_db_ex,                     starting_fish_count = 100,                     last_tte = 54)  #Create plot by inputting surv_dat into Surv_Plots()! Surv_Plots(surv_db = surv_dat,            plot_prefix = \"QCATC777\",            xlim = c(0, 54),            ylim = c(0, 1),            xlab = \"TTE\",            plot = \"both\",            dailybin = FALSE) #> NOTE: entry.status has been set to 0 for all. #> NOTE: entry.status has been set to 0 for all. #> NOTE: Dropping  1  rows with duration of follow up < tol #> NOTE: entry.status has been set to 0 for all. #> NOTE: entry.status has been set to 0 for all. #> $Survival_Plot  #>  #> $Hazard_Plot  #>"},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Pred.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict End Survival Rate — Surv_Pred","title":"Predict End Survival Rate — Surv_Pred","text":"Predict survival rate given survival dataset provided reference survival database used estimate reference hazard curve. Prediction done separately treatment group.","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Pred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict End Survival Rate — Surv_Pred","text":"","code":"Surv_Pred(   pred_db,   ref_db,   predsr_tte,   method = 2,   coxph_mod = \"GLMM\",   lambda_pred = NULL,   phi_pred = NULL )"},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Pred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict End Survival Rate — Surv_Pred","text":"pred_db Placeholder ref_db Placeholder predsr_tte Placeholder method Placeholder coxph_mod Placeholder lambda_pred Placeholder phi_pred Placeholder","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Pred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict End Survival Rate — Surv_Pred","text":"Placeholder","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Pred.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict End Survival Rate — Surv_Pred","text":"P","code":""},{"path":[]},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Pred.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict End Survival Rate — Surv_Pred","text":"","code":"#Placeholder"},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Simul.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Survival Data — Surv_Simul","title":"Simulate Survival Data — Surv_Simul","text":"Simulates survival data based set user-specified experimental parameters reference hazard curve (e.g. hazard curve control group). Able simulate data inter-cluster (e.g. tank) variation added based framework mixed cox proportional hazards model (coxme::coxme). Able simulate right censored data (e.g. sampled fish) using sampling_specs argument. Optionally produces plot illustrating characteristics simulated data population / truth data (sample) simulated.","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Simul.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Survival Data — Surv_Simul","text":"","code":"Surv_Simul(   haz_db,   fish_num_per_tank = 100,   tank_num_per_trt = 4,   treatments_hr = c(1, 1, 1, 1),   logHR_sd_intertank = 0,   sampling_specs = NULL,   n_sim = 1,   plot_out = TRUE,   pop_out = TRUE,   plot_name = \"Surv_Simul-Plot-Output\",   theme = \"ggplot2\" )"},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Simul.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Survival Data — Surv_Simul","text":"haz_db dataframe representing reference hazard curve; can generated bshazard() Surv_Plots(). fish_num_per_tank number fish simulate per tank. Defaults 100. tank_num_per_trt number tanks simulate per treatment group. Defaults 4. treatments_hr vector representing hazard ratios treatment groups starting reference/control (HR = 1). Length vector represents number treatment groups. Defaults c(1, 1, 1, 1). logHR_sd_intertank standard deviation inter-tank variation log(HR) scale according coxme framework. Defaults 0 (inter-tank variation) quite oftenly, estimate injected Trojan fish data. reference 0.1 reflects low inter-tank variation situation, 0.35 fairly high can occurred immersion challenged fish datasets. sampling_specs dataframe representing number / amount right censored data (e.g. sampled fish) per tank different times represented two columns \"Amount\" \"TTE\", respectively. See Examples example use. Defaults NULL (sampling). n_sim Number survival dataset simulate. Defaults 1. plot_out Whether output information plot (details return). Defaults TRUE. pop_out Whether output dataframe containing survival probability values population. Defaults TRUE. plot_name Character string specifying name saved plot. Defaults \"Surv_Simul-Plot-Output\". theme Character string specifying graphics theme plots. Theme \"ggplot2\" \"prism\" currently available. Defaults \"ggplot2\".","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Simul.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Survival Data — Surv_Simul","text":"minimum, returns simulated survival dataframe consisting 5 columns: TTE (Time Event), Status (0 / 1), Trt.ID, Tank.ID, n_sim represents simulation number data subsets. plot_out = TRUE, outputs list additionally contains Kaplan-Meier survival plot. plot illustrates survival curve end survival rates simulated dataset well population. number simulated dataset greater 1, multiple curves drawn representing statement provided regarding power detect effect Treatment – specifically, percent positive (p < 0.05) global log-rank test using survival::survdiff(). pop_out = TRUE, outputs list additionally contains dataframe representing survival probability values population / truth sample supposedly taken.","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Simul.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Survival Data — Surv_Simul","text":"Simulations based uniform-probability draws (U ~ (0, 1)) set events can expressed function time using cumulative density function failures (F(t), .e. cumulative mort. curve). F(t) can transformed cumulative hazard function H(t), hence relationship H(t) uniform draws (U) also known (derivation equation Bender et al. (2003). H(t) related (integral) hazard function h(t), since h(t) related effects (e.g. treatment tank) based cox proportional hazards model, effects can now incorporated simulation process can interacted U. simulation process follows: Surv_Simul() takes random sample U (e.g. 0.7). U transformed H relationship known (see Bender et al. 2003) : H = -log(U) ⋅ exp(-log(β)); β representing treatment tank effects. function H(t) inverse (known supplied reference hazard curve) applied H obtain t (time event) represents survival data. Data t beyond last follow-period represent survivors (Status set 0), , represents mortalities (Status set 1). verify correct \"randomness\" produced simulated survival data, given adding \"randomness\" whole point simulations (), 5 different validation checks performed (documented pdf uploaded github). checks showed HR estimated fitting two curves sampled population, converges mean 1 () many simulations, across simulations HR varies expected (SD simulated HRs = SE HR supposed cox model). checks also showed p-value obtained applying log-rank test null (-effect) simulated datasets, distribution uniform (), false positive rate 0.05 given alpha used 0.05 (). Additionally, power calculated simulations equal power calculated online calculator. Last, checks showed variations simulated survival curve similar observed curves simulated using different, limited, method (bootstraping / re-sampling replacement).","code":""},{"path":[]},{"path":"https://sean4andrew.github.io/safuncs/reference/Surv_Simul.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Survival Data — Surv_Simul","text":"","code":"#Starting from an example mortality database, we first generate the complete survivor #data using Surv_Gen() data(mort_db_ex) surv_dat = Surv_Gen(mort_db = mort_db_ex,                     starting_fish_count = 100,                     last_tte = 54)  #Filter for the control group (\"A\") to get a reference hazard curve for simulations surv_dat_A = surv_dat[surv_dat$Trt.ID == \"A\", ]  #Estimate the hazard curve of the control group and get the associated hazard #dataframe using bshazard::bshazard() or safuncs::Surv_Plots()$Hazard_DB ref_haz_route_bshazard = bshazard::bshazard(data = surv_dat_A,                                             survival::Surv(TTE, Status) ~ Tank.ID,                                             verbose = FALSE) #> NOTE: entry.status has been set to 0 for all. ref_haz_route_bshazard = data.frame(summary(ref_haz_route_bshazard)$HazardEstimates)  ref_haz_route_safuncs = safuncs::Surv_Plots(surv_db = surv_dat_A,                                             data_out = TRUE)$Hazard_DB #> NOTE: entry.status has been set to 0 for all.  #Simulate! Sampled 10 fish per tank at 45 DPC, but otherwise default conditions. Surv_Simul(haz_db = ref_haz_route_safuncs,            treatments_hr = c(1, 0.75, 0.5),            sampling_specs = data.frame(Amount = 10,                                        TTE = 45))$surv_plots   #Simulate multiple times to better answer the question: are my future samples #likely to be good approximates of the truth / population Surv_Simul(haz_db = ref_haz_route_safuncs,            treatments_hr = c(1, 0.75, 0.5),            sampling_specs = data.frame(Amount = 10,                                        TTE = 45),            n_sim = 4)$surv_plots"},{"path":"https://sean4andrew.github.io/safuncs/reference/theme_Publication.html","id":null,"dir":"Reference","previous_headings":"","what":"Publication theme for ggplot2 — theme_Publication","title":"Publication theme for ggplot2 — theme_Publication","text":"theme function add ggplot2 object publication style plots. Function adapted HanjoStudy/quotidieR.","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/theme_Publication.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Publication theme for ggplot2 — theme_Publication","text":"","code":"theme_Publication(base_size = 14)"},{"path":"https://sean4andrew.github.io/safuncs/reference/theme_Publication.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Publication theme for ggplot2 — theme_Publication","text":"base_size size text graph","code":""},{"path":"https://sean4andrew.github.io/safuncs/reference/theme_Publication.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Publication theme for ggplot2 — theme_Publication","text":"theme function add ggplot2 object","code":""},{"path":[]},{"path":"https://sean4andrew.github.io/safuncs/reference/theme_Publication.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Publication theme for ggplot2 — theme_Publication","text":"","code":"#Load an example dataset data(iris)  #Create a ggplot modified with theme_Publication() library(ggplot2) ggplot(data = iris, aes(x = Species, colour = Species, y = Petal.Length)) +    geom_boxplot() +    theme_Publication()"}]

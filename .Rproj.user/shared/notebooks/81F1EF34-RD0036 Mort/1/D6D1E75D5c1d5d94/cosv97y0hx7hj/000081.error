{"frames":[{"func":"(function (x, ...) \nUseMethod(\"print\"))(x)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"print.ggsurvplot(x)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".build_ggsurvplot(x = x, surv.plot.height = surv.plot.height, \n    risk.table.height = risk.table.height, ncensor.plot.height = ncensor.plot.height)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".get_legend(x$plot)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"ggplot_gtable(ggplot_build(myggplot))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"attach_plot_env(data$plot$plot_env)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"options(ggplot2_plot_env = env)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"ggplot_build(myggplot)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"ggplot_build.ggplot(myggplot)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"plot$guides$build(npscales, plot$layers, plot$labels, data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"build(..., self = self)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"guides$train(scales, labels)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"train(..., self = self)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"Map(function(guide, param, scale, aes) {\n    guide$train(param, scale, aes, title = labels[[aes]])\n}, guide = self$guides, param = self$params, aes = self$aesthetics, \n    scale = scales)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mapply(FUN = f, ..., SIMPLIFY = FALSE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (guide, param, scale, aes) \n{\n    guide$train(param, scale, aes, title = labels[[aes]])\n})(guide = dots[[1L]][[1L]], param = dots[[2L]][[1L]], aes = dots[[3L]][[1L]],  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"guide$train(param, scale, aes, title = labels[[aes]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"train(..., self = self)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"inject(self$extract_key(scale, !!!params))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"self$extract_key(scale, title = structure(list(), class = \"waiver\"), \n    theme = NULL, direction = NULL, override.aes = structure(list(), names = character(0)), \n    nrow = NULL, ncol = NULL, reverse = FALSE, order = 0L, position = NULL, \n    name = \"legend\", hash = character(0), aesthetic = \"colour\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"extract_key(...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"scale$map(breaks)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"map(..., self = self)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"self$palette(n)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"palette(...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cli::cli_abort(\"Insufficient values in manual scale. {n} needed but only {length(values)} provided.\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rlang::abort(message, ..., call = call, use_cli_format = TRUE, \n    .frame = .frame)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in palette(...) : \n"}
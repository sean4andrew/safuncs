"0","Surv_Plots = function(surv_db,"
"0","                      factor = ""Trt.ID"","
"0","                      xlim = NULL,"
"0","                      xbreaks = NULL,"
"0","                      xlab = ""Days Post Challenge"","
"0","                      ylim = c(0, 1.03),"
"0","                      lambda = NULL,"
"0","                      phi = NULL,"
"0","                      dailybin = TRUE,"
"0","                      plot = ""both"","
"0","                      colours = NULL,"
"0","                      theme = ""ggplot"","
"0","                      data_out = FALSE,"
"0","                      plot_save = TRUE,"
"0","                      plot_prefix = ""ONDA_XX"","
"0","                      plot_dim = c(6, 4)) {"
"0",""
"0","  if(is.null(xlim)) {xlim <- c(0, max(surv_db$TTE) + max(1, round(max(surv_db$TTE) / 50)))}"
"0","  if(is.null(xbreaks)) {xbreaks <- max(1, round((xlim[2] - xlim[1]) / 10))}"
"0","  "
"0","  #Address factors"
"0","  factors_vec = factor"
"0","  facet_by = NULL"
"0","  if(grepl(""\\|"", factor)) {"
"0","    factors_vec = strsplit(x = factor, split = ""\\|"") %>% unlist() %>% gsub(pattern = "" "", replacement = """")"
"0","    facet_by = factors_vec[2]"
"0","  }"
"0","  if(grepl(""\\*"", factor)) {"
"0","    factors_vec = strsplit(x = factor, split = ""\\*"") %>% unlist() %>% gsub(pattern = "" "", replacement = """")"
"0","  }"
"0",""
"0","  if(plot == ""surv"" | plot == ""both"") {"
"0",""
"0","    #Create survfit object"
"0","    surv_obj = survminer::surv_fit(as.formula(paste(c(""survival::Surv(TTE, Status) ~"", factors_vec), collapse = "" + "")),"
"0","                                   data = surv_db)"
"0",""
"0","    #Dealing with one Trt.ID scenario"
"0","    if(length(levels(as.factor(surv_db$Trt.ID))) == 1) {"
"0","      strn = unique(surv_db$Trt.ID)"
"0","    } else {"
"0",""
"0","      #Add strata names"
"0","      strn = attributes(surv_obj$strata)$names"
"0","      if(length(factors_vec) == 1){"
"0","        strn = sub("".*="", """", strn)"
"0","      } "
"0","      if(grepl(""\\|"", factor)) {"
"0","        strn = unique(gsub("".*=(.*),.*=(.*)"", ""\\1"", strn))"
"0","      }"
"0","      if(grepl(""\\*"", factor)) {"
"0","        strn = gsub("".*=(.*),.*=(.*)"", ""\\1, \\2"", strn)"
"0","      }"
"0","      strn = sub(""\\s+$"", """", strn)"
"0","    }"
"0","    "
"0","    #Create survival plot"
"0","    surv_plot = survminer::ggsurvplot(surv_obj,"
"0","                                      conf.int = FALSE,"
"0","                                      ggtheme = theme(plot.background = element_rect(fill = ""white"")),"
"0","                                      surv.scale = ""percent"","
"0","                                      xlim = xlim,"
"0","                                      ylim = ylim,"
"0","                                      facet.by = facet_by,"
"0","                                      short.panel.labs = TRUE,"
"0","                                      short.legend.labs = TRUE)"
"0","    if(""plot"" %in% names(surv_plot)){surv_plot <- surv_plot$plot}"
"0","    "
"0","    if(is.null(colours)) {color_vec <- unique(layer_data(surv_plot)[,1])} else {color_vec <- colours}"
"0","    surv_plot$scales$scales = list()"
"0","    surv_plot = surv_plot +"
"0","      guides(color = guide_legend(paste(setdiff(factors_vec, facet_by), collapse = "" & ""))) +"
"0","      theme(legend.position = ""right"") +"
"0","      scale_x_continuous(breaks = seq(0, xlim[2] * 2, xbreaks), name = xlab, limits = xlim, oob = scales::squish,"
"0","                         expand = expansion()) +"
"0","      scale_y_continuous(labels = scales::percent, limits = ylim, n.breaks = 10, expand = expansion()) +"
"0","      scale_color_manual(labels = strn, values = color_vec)"
"0",""
"0","    #Create survdat"
"0","    surv_dat = data.frame(Group = surv_plot$data$strata,"
"0","                          Survprob = surv_plot$data$surv,"
"0","                          Time = surv_plot$data$time)"
"0",""
"0","    #Address names"
"0","    if(length(factors_vec) == 2){"
"0","      surv_dat$Group = gsub("".*=(.*),.*=(.*)"", ""\\1, \\2"", surv_dat$Group)"
"0","      surv_dat = tidyr::separate(data = surv_dat, col = ""Group"", sep = "", "", into = factors_vec)"
"0","      surv_dat[, -which(colnames(surv_dat) == ""Group"")]"
"0","    }"
"0",""
"0","    #Add theme"
"0","    Survival_Plot = surv_plot"
"0","    if(theme == ""prism"") {Survival_Plot <- Survival_Plot + ggprism::theme_prism()}"
"0","    if(theme == ""publication"") {Survival_Plot <- Survival_Plot + safuncs::theme_Publication()}"
"0",""
"0","    #Save Plots"
"0","    if(plot_save == TRUE){"
"0","      ggsave(paste(plot_prefix, ""Survival Curve.tiff"", sep = ""-""), dpi = 300,"
"0","             width = plot_dim[1], height = plot_dim[2], plot = Survival_Plot)"
"0","      eoffice::topptx(figure = Survival_Plot, width = plot_dim[1], height = plot_dim[2],"
"0","                      filename = paste(plot_prefix, ""Survival Curve.pptx"", sep = ""-""))"
"0","    }"
"0","  }"
"0",""
"0","  #Dealing with hazard curve creation"
"0","  if(dailybin == TRUE) {dbin <- max(surv_db$TTE)}"
"0","  if(dailybin == FALSE) {dbin <- NULL}"
"0",""
"0","  #create Haz_list"
"0","  if(plot == ""haz"" | plot == ""both"") {"
"0","    Haz_list = list()"
"0",""
"0","    surv_db$group = factor(interaction(surv_db[, factors_vec], sep = "", ""))"
"0","    Haz_Group_Vec = unique(surv_db$group)"
"0",""
"0","    #Create haz curve for each group"
"0","    for(Haz_Group in Haz_Group_Vec) {"
"0",""
"0","      #Filter data for a group"
"0","      surv_db_group = droplevels(surv_db[surv_db$group == Haz_Group,])"
"0",""
"0","      #Address no mort situations"
"0","      if(sum(surv_db_group$Status) == 0){"
"0","        Haz_list[[Haz_Group]] = data.frame(Hazard = 0,"
"0","                                           Time = rep(0, max(surv_db$TTE), 1))"
"0","      } else { #Create haz curves"
"0","        if(length(levels(as.factor(surv_db_group$Tank.ID))) > 1) {iv <- ""Tank.ID""} else {iv <- 1} #address one tank situations"
"0","        sink() %>% suppressWarnings()"
"0","        Haz_bs = bshazard::bshazard(nbin = dbin,"
"0","                                     data = surv_db_group,"
"0","                                     formula = as.formula(paste(""survival::Surv(TTE, Status) ~"", iv)),"
"0","                                     verbose = FALSE,"
"0","                                     lambda = lambda,"
"0","                                     phi = phi) %>% safuncs::silencer()"
"0","        Haz_list[[Haz_Group]] = data.frame(Hazard = Haz_bs$hazard,"
"0","                                           Time = Haz_bs$time)"
"0","      }"
"0","    }"
"0",""
"0","    #Create hazard database"
"0","    haz_db = dplyr::bind_rows(Haz_list, .id = paste(factors_vec, collapse = "", ""))"
"0","    if(length(factors_vec) == 2){haz_db <- tidyr::separate(data = haz_db, col = 1, into = factors_vec, sep = "", "", remove = FALSE)}"
"0",""
"0","    #Preserve levels from surv_db"
"0","    if(length(factors_vec) == 1){"
"0","      haz_db[, factors_vec] = factor(haz_db[, factors_vec], levels = levels(factor(surv_db[, factors_vec])))"
"0","    } else {"
"0","      haz_db[, factors_vec[1]] = factor(haz_db[, factors_vec[1]], levels = levels(factor(surv_db[, factors_vec[1]])))"
"0","      haz_db[, factors_vec[2]] = factor(haz_db[, factors_vec[2]], levels = levels(factor(surv_db[, factors_vec[2]])))"
"0","    }"
"0","    "
"0","    #Create hazard plot"
"0","    factors_leg = setdiff(factors_vec, facet_by)"
"0","    Hazard_Plot = ggplot(data = haz_db,"
"0","                         aes(x = Time, y = Hazard, color = .data[[paste(factors_leg, collapse = "", "")]])) +"
"0","      geom_line(linewidth = 1) +"
"0","      geom_point() +"
"0","      scale_x_continuous(breaks = seq(0, xlim[2] + 100, xbreaks),"
"0","                         limits = xlim, name = xlab, expand = expansion()) +"
"0","      scale_y_continuous(n.breaks = 6, name = ""Hazard"", expand = expansion(0.01)) +"
"0","      coord_cartesian(clip = ""off"")"
"0","    "
"0","    if(!is.null(facet_by)) {Hazard_Plot <- Hazard_Plot + facet_wrap(as.formula(paste(""~"", facet_by)))}"
"0","    if(!is.null(colours)) {Hazard_Plot <- Hazard_Plot + scale_color_manual(values = colours)}"
"0","    if(theme == ""prism"") {Hazard_Plot <- Hazard_Plot + ggprism::theme_prism()}"
"0","    if(theme == ""publication"") {Hazard_Plot <- Hazard_Plot + safuncs::theme_Publication()}"
"0",""
"0","    #Save plots"
"0","    if(plot_save == TRUE) {"
"0","      ggsave(paste(plot_prefix, ""Hazard Curve.tiff"", sep = ""-""), dpi = 300,"
"0","             width = plot_dim[1], height = plot_dim[2], plot = Hazard_Plot)"
"0","      eoffice::topptx(figure = Hazard_Plot, filename = paste(plot_prefix, ""Hazard Curve.pptx"", sep = ""-""),"
"0","                      width = plot_dim[1], height = plot_dim[2])"
"0","    }"
"0","  }"
"0",""
"0","  #Print outputs"
"0","  if(data_out == TRUE) {"
"0","    if(plot == ""surv"") {return(list(Survival_Plot = Survival_Plot, Survival_DB = surv_dat))}"
"0","    if(plot == ""haz"") {return(list(Hazard_Plot = Hazard_Plot, Hazard_DB = haz_db))}"
"0","    if(plot == ""both"") {return(list(Survival_Plot = Survival_Plot, Survival_DB = surv_dat,"
"0","                                    Hazard_Plot = Hazard_Plot, Hazard_DB = haz_db))}"
"0","  } else {"
"0","    if(plot == ""surv"") {return(Survival_Plot = Survival_Plot)}"
"0","    if(plot == ""haz"") {return(Hazard_Plot = Hazard_Plot)}"
"0","    if(plot == ""both"") {return(list(Survival_Plot = Survival_Plot, Hazard_Plot = Hazard_Plot))}"
"0","  }"
"0","}"

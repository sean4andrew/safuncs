"0","Con_Simul_Object = simul_param"
"0","add_fisher_exact = TRUE"
"0","add_ord = TRUE"
"0","sample_sizes = c(50, 100, 150)"
"0","n_sim = 1000"
"0","FPR = TRUE"
"0",""
"0"," Params = Con_Simul_Object$params"
"0","  PR_DB = data.frame()"
"0","  if(is.null(sample_sizes)) {sample_sizes <- Params[1]}"
"0",""
"0","  for(tot_count in as.vector(sample_sizes)) {"
"0",""
"0","    P_Chisq1_Eff = c()"
"0","    P_Chisq1_Null = c()"
"0","    P_Ord_Eff = c()"
"0","    P_Ord_Null = c()"
"0","    P_Fish_Eff = c()"
"0","    P_Fish_Null = c()"
"0",""
"0","    for(iter in 1:n_sim) {"
"0","      Sim_Tab_Eff = Con_Simul(total_count = tot_count,"
"0","                               n_lesion = Params[2],"
"0","                               n_Trt. = Params[3],"
"0","                               margin_fixed_Trt. = Params[4],"
"0","                               probs = Con_Simul_Object$probs,"
"0","                               verbose = FALSE)"
"0",""
"0","      P_Chisq1_Eff = append(P_Chisq1_Eff, suppressWarnings(chisq.test(x = Sim_Tab_Eff)$p.value))"
"0","      if(add_ord == TRUE) {"
"0","        DB_Ord_Eff = as.data.frame(as.table(Sim_Tab_Eff))"
"0","        DB_Ord_Eff = data.frame(lapply(DB_Ord_Eff, rep, DB_Ord_Eff$Freq))"
"0","        DB_Ord_Eff$Lesion_Category = factor(DB_Ord_Eff$Lesion_Category, ordered = TRUE)"
"0","        Ord_Eff = ordinal::clm(data = DB_Ord_Eff, Lesion_Category ~ Trt.)"
"0","        Ord_Eff0 = ordinal::clm(data = DB_Ord_Eff, Lesion_Category ~ 1)"
"0","        P_Ord_Eff = append(P_Ord_Eff, anova(Ord_Eff, Ord_Eff0)$'Pr(>Chisq)'[2])"
"0","      }"
"0","      if(add_fisher_exact == TRUE) {"
"0","        P_Fish_Eff <- append(P_Fish_Eff, fisher.test(x = Sim_Tab_Eff, simulate.p.value = TRUE)$p.value)"
"0","      }"
"0","    }"
"0",""
"0","    if(FPR == TRUE) {"
"0","      probs_null_mat = matrix(nrow = nrow(Con_Simul_Object$probs),"
"0","                              ncol = ncol(Con_Simul_Object$probs),"
"0","                              data = rep(Con_Simul_Object$probs[1,],"
"0","                                         each = nrow(Con_Simul_Object$probs)))"
"0","      probs_null_mat = probs_null_mat * rowSums(Con_Simul_Object$probs)"
"0","      probs_null_mat = probs_null_mat / sum(probs_null_mat)"
"0",""
"0","      for(iter in 1:n_sim) {"
"0",""
"0","        Sim_Tab_Null = Con_Simul(total_count = tot_count,"
"0","                                  n_lesion = Params[2],"
"0","                                  n_Trt. = Params[3],"
"0","                                  margin_fixed_Trt. = Params[4],"
"0","                                  probs = probs_null_mat,"
"0","                                  verbose = FALSE)"
"0",""
"0",""
"0","        P_Chisq1_Null = append(P_Chisq1_Null, suppressWarnings(chisq.test(x = Sim_Tab_Null)$p.value))"
"0","        if(add_ord == TRUE) {"
"0","          DB_Ord_Null = as.data.frame(as.table(Sim_Tab_Null))"
"0","          DB_Ord_Null = data.frame(lapply(DB_Ord_Null, rep, DB_Ord_Null$Freq))"
"0","          DB_Ord_Null$Lesion_Category = factor(DB_Ord_Null$Lesion_Category, ordered = TRUE)"
"0","          Ord_Null = ordinal::clm(data = DB_Ord_Null, Lesion_Category ~ Trt.)"
"0","          Ord_Null0 = ordinal::clm(data = DB_Ord_Null, Lesion_Category ~ 1)"
"0","          P_Ord_Null = append(P_Ord_Null, anova(Ord_Eff, Ord_Eff0)$'Pr(>Chisq)'[2])"
"0","        }"
"0","        if(add_fisher_exact == TRUE) {"
"0","          P_Fish_Null <- append(P_Fish_Null, fisher.test(x = Sim_Tab_Null, simulate.p.value = TRUE)$p.value)"
"0","        }"
"0","      }"
"0","    }"
"0",""
"0","    PR_DB = rbind(PR_DB, data.frame(Total_count = tot_count,"
"0","                                    Power_Chisquare = sum(P_Chisq1_Eff < 0.05) / length(P_Chisq1_Eff),"
"0","                                    Power_OrdinalRegression = sum(P_Ord_Eff < 0.05) / length(P_Ord_Eff),"
"0","                                    Power_FishersExact = sum(P_Fish_Eff < 0.05) / length(P_Fish_Eff),"
"0","                                    FPR_Chisquare = sum(P_Chisq1_Null < 0.05) / length(P_Chisq1_Null),"
"0","                                    FPR_OrdinalRegression = sum(P_Ord_Null < 0.05) / length(P_Ord_Null),"
"0","                                    FPR_FishersExact = sum(P_Fish_Null < 0.05) / length(P_Fish_Null)))"
"0","  }"
"0",""
"0","  PR_DB_stacked = data.frame(PR_DB$Total_count,"
"0","                             stack(x = PR_DB, select = c(""Power_Chisquare"", ""Power_OrdinalRegression"", ""Power_FishersExact"","
"0","                                                         ""FPR_Chisquare"", ""FPR_OrdinalRegression"", ""FPR_FishersExact"")))"
"0","  PR_DB_stacked = na.omit(PR_DB_stacked)"
"0","  split_txt = strsplit(x = as.character(PR_DB_stacked$ind), split = ""_"")"
"0","  PR_DB_stacked$Statistical_Test = sapply(split_txt, '[', 2)"
"0","  PR_DB_stacked$Class = sapply(split_txt, '[', 1)"
"0","  PR_DB_stacked = PR_DB_stacked[,-3]"
"0","  colnames(PR_DB_stacked) <- c(""Total_Count"", ""Percent_of_Significant_Results"", ""Statistical_Test"", ""Class"")"
"0","  PR_DB_stacked$Percent_of_Significant_Results = 100 * PR_DB_stacked$Percent_of_Significant_Results"
"0",""
"0","  #remove na columns"
"0","  PR_DB = PR_DB[, colSums(is.na(PR_DB)) < nrow(PR_DB)]"
"0",""
"0","  plot1 = ggplot2::ggplot(data = PR_DB_stacked, ggplot2::aes(x = Total_Count, y = Percent_of_Significant_Results, color = Statistical_Test)) +"
"0","    ggplot2::geom_point() +"
"0","    ggplot2::geom_line() +"
"0","    ggplot2::facet_wrap(~ Class) +"
"0","    ggplot2::xlab(""Total Counts in Contingency Table"") +"
"0","    ggplot2::ylab(""Percent of Significant Results (%)"") +"
"0","    ggplot2::scale_y_continuous(breaks = seq(0, 100, 5), limits = c(0, 100)) +"
"0","    ggplot2::labs(color = ""Statistical Test"")"
"0",""

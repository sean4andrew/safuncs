"0","#Filter Mor2_DB for Orange group and take out extra columns"
"0","Mor3_DB = Mor2_DB[Mor2_DB$Trt.ID == ""Orange"",]"
"0","Mor3_DB = Mor3_DB[, -c(1, 4:5)]"
"0",""
"0","#Standardize based on onset of significant mort"
"0","Mor3_DB$TTE = Mor3_DB$TTE + 1"
"0",""
"0","pred_db = Mor_Surv_DB[Mor_Surv_DB$Trt.ID %in% c(""A"", ""B"", ""C"", ""D"", ""E"", ""F""),] #Data from ongoing study, with SR to be predicted. See \bold{Details} for specifics."
"0","ref_db = Mor3_DB #Reference survival data from to create the reference hazard function."
"0","predsr_tte = 20 #The day at which SR is to be predicted. Minimum is Day 5 post challenge."
"0","method = 1 #SR prediction method. See \bold{Details} for more info."
"0","coxph_mod = ""GLMM"" #Model used to estimate HR. Can be either ""GLMM"" or ""GEE"". See \bold{Details} for more info."
"0","lambda_pred = NULL #Lambda parameter for the bshazard curve of the predicted dataset."
"0","min_SR_Day = 12"
"0",""
"0","  pred_db = pred_db[pred_db$TTE > 0, ] #ensure positive TTE"
"0","  ref_db = ref_db[ref_db$TTE > 0, ] #ensure positive TTE"
"0",""
"0","  #Generate reference level bshazard curve"
"0","  ref_id = levels(as.factor(ref_db$Trt.ID))"
"0","  ref_db$Trt.ID = paste(""ref"", ref_id)"
"0","  ref_bshaz = bshazard::bshazard(data = ref_db, survival::Surv(TTE, Status) ~ Tank.ID,"
"0","                                 verbose = FALSE)"
"1","NOTE: entry.status has been set to 0 for all.
"
"0","  #initialize dataframes"
"0","  pred_SR_DB = data.frame()"
"0","  haz_db = data.frame()"
"0",""
"0","  #loop for every treatment"
"0","  for(pred_trt in levels(as.factor(pred_db$Trt.ID))) {"
"0",""
"0","    comb_db = rbind(ref_db, pred_db[pred_db$Trt.ID == pred_trt,])"
"0","    comb_db$Trt.ID = relevel(as.factor(comb_db$Trt.ID), ref = paste(""ref"", ref_id))"
"0",""
"0","    #loop for every predictable day"
"0","    for(SR_Day in min_SR_Day:max(pred_db$TTE)) {"
"0","      comb_db2 = survival::survSplit(comb_db, cut = SR_Day, end = ""TTE"", event = ""Status"", episode = ""Obs"")"
"0","      comb_db2 = comb_db2[comb_db2$Obs == 1, ]"
"0",""
"0","      #Get HR"
"0","      if(coxph_mod == ""GLMM""){cox_comp = coxme::coxme(survival::Surv(TTE, Status) ~ Trt.ID + (1|Tank.ID),"
"0","                                                      data = comb_db2)}"
"0","      if(coxph_mod == ""GEE""){cox_comp = survival::coxph(survival::Surv(TTE, Status) ~ Trt.ID, cluster = Tank.ID,"
"0","                                                        data = comb_db2)}"
"0","      pred_HR = exp(coef(cox_comp))"
"0",""
"0","      #Get SR"
"0","      ref_bshaz_t = data.frame(hazard = ref_bshaz$hazard[ref_bshaz$time < predsr_tte],"
"0","                               time = ref_bshaz$time[ref_bshaz$time < predsr_tte])"
"0",""
"0","      if(method == 1) {"
"0","        cumhaz = DescTools::AUC(x = c(ref_bshaz_t$time),"
"0","                                y = c(ref_bshaz_t$hazard) * pred_HR)"
"0","        pred_SR = 100 * exp(-cumhaz)"
"0","      }"
"0",""
"0","      if(method == 2) {"
"0","        pred_db2 = survival::survSplit(pred_db, cut = SR_Day, end = ""TTE"", event = ""Status"", episode = ""Obs"")"
"0","        pred_db2 = pred_db2[pred_db2$Obs == 1, ]"
"0","        pred_bshaz = bshazard::bshazard(data = droplevels(pred_db2[pred_db2$Trt.ID == pred_trt,]),"
"0","                                        survival::Surv(TTE, Status) ~ Tank.ID, verbose = FALSE, lambda = lambda_pred)"
"0",""
"0","        cumhaz_precut = DescTools::AUC(x = c(pred_bshaz$time),"
"0","                                       y = c(pred_bshaz$hazard))"
"0","        ref_bshaz_t2 = ref_bshaz_t[ref_bshaz_t$time > SR_Day,]"
"0","        cumhaz_postcut = DescTools::AUC(x = c(ref_bshaz_t2$time),"
"0","                                        y = c(ref_bshaz_t2$hazard) * pred_HR)"
"0",""
"0","        if(is.na(cumhaz_postcut)) {cumhaz_postcut <- 0}"
"0","        pred_SR = 100 * exp(-(cumhaz_precut + cumhaz_postcut))"
"0","      }"
"0","      #compile survival prediction database"
"0","      pred_SR_DB = rbind(pred_SR_DB, data.frame(Trt.ID = pred_trt, Observable_SR_Day = SR_Day, pred_SR, pred_HR))"
"0","    }"
"0","  }"
"0","  row.names(pred_SR_DB) = NULL"
"0",""
"0","  #create survival prediction plot"
"0","  library(ggplot2)"
"0","  Pred_SR_Plot = ggplot(data = pred_SR_DB, aes(x = Observable_SR_Day, y = pred_SR, color = Trt.ID)) +"
"0","    geom_point() +"
"0","    geom_line() +"
"0","    facet_wrap(~Trt.ID) +"
"0","    scale_y_continuous(name = paste(""Predicted Survival (%) on TTE = "", predsr_tte), breaks = seq(0, 100, 10), limits = c(0, 100)) +"
"0","    scale_x_continuous(name = ""Observable TTEs used in Prediction"", breaks = seq(0, 100, 1))"
"0",""
"0","  Pred_HR_Plot = ggplot(data = pred_SR_DB, aes(x = Observable_SR_Day, y = pred_HR, color = Trt.ID)) +"
"0","    geom_point() +"
"0","    geom_line() +"
"0","    facet_wrap(~Trt.ID) +"
"0","    scale_y_continuous(name = paste(""Predicted HR "", predsr_tte)) +"
"0","    scale_x_continuous(name = ""Observable TTEs used in Prediction"", breaks = seq(0, 100, 1))"
"0",""
"0","  pred_SR_DB"

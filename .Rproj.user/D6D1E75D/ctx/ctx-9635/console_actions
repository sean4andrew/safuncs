{
    "type": [
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2
    ],
    "data": [
        "+ ",
        "                                        phi = phi)",
        "+ ",
        "            print(Haz_Group)",
        "+ ",
        "        }",
        "+ ",
        "        Haz_list[[Haz_Group]] = data.frame(Hazard = Haz_bs$hazard,",
        "+ ",
        "                                           Time = Haz_bs$time)",
        "+ ",
        "    }",
        "+ ",
        "}",
        "[1] \"A,C14\"\n[1] \"A,C2\"\n[1] \"A,C9\"\n",
        "> ",
        "> ",
        "for(Haz_Group in Haz_Group_Vec[4]) {",
        "+ ",
        "    if(plot_bytank == TRUE) {",
        "+ ",
        "        surv_db_group = surv_db[surv_db$group == Haz_Group,]",
        "+ ",
        "        surv_db_group$group = droplevels(surv_db_group$group)",
        "+ ",
        "    } else {",
        "+ ",
        "        surv_db_group = surv_db[surv_db$Trt.ID == Haz_Group,]",
        "+ ",
        "    }",
        "+ ",
        "    ",
        "+ ",
        "    if(sum(surv_db_group$Status) == 0){",
        "+ ",
        "        Haz_list[[Haz_Group]] = data.frame(Hazard = 0,",
        "+ ",
        "                                           Time = rep(0, max(surv_db$TTE), 1))",
        "+ ",
        "    } else {",
        "+ ",
        "        if(length(levels(as.factor(surv_db_group$Tank.ID))) > 1) {",
        "+ ",
        "            Haz_bs = bshazard::bshazard(nbin = dbin,",
        "+ ",
        "                                        data = surv_db_group,",
        "+ ",
        "                                        survival::Surv(TTE, Status) ~ Tank.ID,",
        "+ ",
        "                                        verbose = FALSE,",
        "+ ",
        "                                        lambda = lambda,",
        "+ ",
        "                                        phi = phi)",
        "+ ",
        "        } else {",
        "+ ",
        "            Haz_bs = bshazard::bshazard(nbin = dbin,",
        "+ ",
        "                                        data = surv_db_group,",
        "+ ",
        "                                        survival::Surv(TTE, Status) ~ 1,",
        "+ ",
        "                                        verbose = FALSE,",
        "+ ",
        "                                        lambda = lambda,",
        "+ ",
        "                                        phi = phi)",
        "+ ",
        "            print(Haz_Group)",
        "+ ",
        "        }",
        "+ ",
        "        Haz_list[[Haz_Group]] = data.frame(Hazard = Haz_bs$hazard,",
        "+ ",
        "                                           Time = Haz_bs$time)",
        "+ ",
        "    }",
        "+ ",
        "}",
        "[1] \"B,C1\"\n",
        "Warning message:\nIn Surv(dataf$entry_, dataf$exit_, dataf$status) :\n  Stop time must be > start time, NA created\n",
        "> ",
        "surv_db_group",
        "    Tank.ID Trt.ID TTE Status group\n1        C1      B   0      1  B,C1\n4        C1      B  19      1  B,C1\n9        C1      B  21      1  B,C1\n11       C1      B  22      1  B,C1\n16       C1      B  24      1  B,C1\n35       C1      B  27      1  B,C1\n50       C1      B  27      1  B,C1\n60       C1      B  29      1  B,C1\n78       C1      B  30      1  B,C1\n79       C1      B  30      1  B,C1\n80       C1      B  30      1  B,C1\n81       C1      B  30      1  B,C1\n106      C1      B  30      1  B,C1\n131     ",
        " C1      B  31      1  B,C1\n152      C1      B  33      1  B,C1\n153      C1      B  33      1  B,C1\n154      C1      B  33      1  B,C1\n155      C1      B  33      1  B,C1\n181      C1      B  34      1  B,C1\n182      C1      B  34      1  B,C1\n183      C1      B  34      1  B,C1\n208      C1      B  35      1  B,C1\n209      C1      B  35      1  B,C1\n210      C1      B  35      1  B,C1\n247      C1      B  36      1  B,C1\n248      C1      B  36      1  B,C1\n276      C1      B  37      1  B,C1\n277      C1     ",
        " B  37      1  B,C1\n300      C1      B  38      1  B,C1\n337      C1      B  40      1  B,C1\n338      C1      B  40      1  B,C1\n341      C1      B  41      1  B,C1\n342      C1      B  41      1  B,C1\n348      C1      B  42      1  B,C1\n350      C1      B  43      1  B,C1\n351      C1      B  43      1  B,C1\n388      C1      B  49      1  B,C1\n593      C1      B  54      0  B,C1\n594      C1      B  54      0  B,C1\n595      C1      B  54      0  B,C1\n596      C1      B  54      0  B,C1\n597      C1      B  54  ",
        "    0  B,C1\n598      C1      B  54      0  B,C1\n599      C1      B  54      0  B,C1\n600      C1      B  54      0  B,C1\n601      C1      B  54      0  B,C1\n602      C1      B  54      0  B,C1\n603      C1      B  54      0  B,C1\n604      C1      B  54      0  B,C1\n605      C1      B  54      0  B,C1\n606      C1      B  54      0  B,C1\n607      C1      B  54      0  B,C1\n608      C1      B  54      0  B,C1\n609      C1      B  54      0  B,C1\n610      C1      B  54      0  B,C1\n611      C1      B  54      0  B",
        ",C1\n612      C1      B  54      0  B,C1\n613      C1      B  54      0  B,C1\n614      C1      B  54      0  B,C1\n615      C1      B  54      0  B,C1\n616      C1      B  54      0  B,C1\n617      C1      B  54      0  B,C1\n618      C1      B  54      0  B,C1\n619      C1      B  54      0  B,C1\n620      C1      B  54      0  B,C1\n621      C1      B  54      0  B,C1\n622      C1      B  54      0  B,C1\n623      C1      B  54      0  B,C1\n624      C1      B  54      0  B,C1\n625      C1      B  54      0  B,C1\n626 ",
        "     C1      B  54      0  B,C1\n627      C1      B  54      0  B,C1\n628      C1      B  54      0  B,C1\n629      C1      B  54      0  B,C1\n630      C1      B  54      0  B,C1\n631      C1      B  54      0  B,C1\n632      C1      B  54      0  B,C1\n633      C1      B  54      0  B,C1\n634      C1      B  54      0  B,C1\n635      C1      B  54      0  B,C1\n636      C1      B  54      0  B,C1\n637      C1      B  54      0  B,C1\n638      C1      B  54      0  B,C1\n639      C1      B  54      0  B,C1\n640      C1 ",
        "     B  54      0  B,C1\n641      C1      B  54      0  B,C1\n642      C1      B  54      0  B,C1\n643      C1      B  54      0  B,C1\n644      C1      B  54      0  B,C1\n645      C1      B  54      0  B,C1\n646      C1      B  54      0  B,C1\n647      C1      B  54      0  B,C1\n648      C1      B  54      0  B,C1\n649      C1      B  54      0  B,C1\n650      C1      B  54      0  B,C1\n651      C1      B  54      0  B,C1\n652      C1      B  54      0  B,C1\n653      C1      B  54      0  B,C1\n654      C1      B  ",
        "54      0  B,C1\n655      C1      B  54      0  B,C1\n",
        "> ",
        "survival::Surv(TTE, Status) ~ 1",
        "survival::Surv(TTE, Status) ~ 1\n",
        "> ",
        "survival::Surv(TTE, Status)",
        "Error: object 'TTE' not found\n",
        "> ",
        "suppressWarnings(bshazard::bshazard(nbin = dbin,",
        "+ ",
        "                                    data = surv_db_group,",
        "+ ",
        "                                    survival::Surv(TTE, Status) ~ 1,",
        "+ ",
        "                                    verbose = FALSE,",
        "+ ",
        "                                    lambda = lambda,",
        "+ ",
        "                                    phi = phi))",
        "Call: bshazard.default(formula = survival::Surv(TTE, Status) ~ 1, data = surv_db_group, \n    nbin = dbin, lambda = lambda, phi = phi, verbose = FALSE)\n\nNumber of records:  100\n  n.events person.time        rate\n1       36        4614 0.007802341\n",
        "> ",
        "bshazard::bshazard(nbin = dbin,",
        "+ ",
        "                                    data = surv_db_group,",
        "+ ",
        "                                    survival::Surv(TTE, Status) ~ 1,",
        "+ ",
        "                                    verbose = FALSE,",
        "+ ",
        "                                    lambda = lambda,",
        "+ ",
        "                                    phi = phi)",
        "Call: bshazard.default(formula = survival::Surv(TTE, Status) ~ 1, data = surv_db_group, \n    nbin = dbin, lambda = lambda, phi = phi, verbose = FALSE)\n\nNumber of records:  100\n  n.events person.time        rate\n1       36        4614 0.007802341\n",
        "Warning message:\nIn Surv(dataf$entry_, dataf$exit_, dataf$status) :\n  Stop time must be > start time, NA created\n",
        "> ",
        "Surv_Pred(surv_db = pred_DB,",
        "+ ",
        "                   ref_surv_db = ref_surv_db2,",
        "+ ",
        "                   pred_tte = 54,",
        "+ ",
        "                   pred_method = \"simple\",",
        "+ ",
        "                   plot_save = TRUE,",
        "+ ",
        "                   plot_prefix = \"ONDA01166\")",
        "NOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\n$Comp_SR_Plot\n\n$Comp_HR_Plot\n\n$Pred_TTE\n\n$Pred_History\n\n$Pred_SR_Plot\n\n$Pred_HR_Plot\n\n",
        "> ",
        "Surv_Plots = function(surv_db,",
        "+ ",
        "                      xlim = NULL,",
        "+ ",
        "                      ylim = c(0, 1),",
        "+ ",
        "                      xlab = \"Days Post Challenge\",",
        "+ ",
        "                      lambda = NULL,",
        "+ ",
        "                      phi = NULL,",
        "+ ",
        "                      dailybin = TRUE,",
        "+ ",
        "                      plot = \"both\",",
        "+ ",
        "                      colours = NULL,",
        "+ ",
        "                      theme = \"ggplot\",",
        "+ ",
        "                      trt_order = NULL,",
        "+ ",
        "                      data_out = FALSE,",
        "+ ",
        "                      plot_bytank = FALSE,",
        "+ ",
        "                      plot_save = TRUE,",
        "+ ",
        "                      plot_prefix = \"ONDA_XX\",",
        "+ ",
        "                      plot_dim = c(6, 4)) {",
        "+ ",
        "    ",
        "+ ",
        "    if(is.null(xlim)) {xlim <- c(0, max(surv_db$TTE))}",
        "+ ",
        "    if(!is.null(trt_order)){surv_db$Trt.ID = factor(surv_db$Trt.ID, levels = trt_order)}",
        "+ ",
        "    ",
        "+ ",
        "    if(plot == \"surv\" | plot == \"both\") {",
        "+ ",
        "        ",
        "+ ",
        "        if(plot_bytank == TRUE) {",
        "+ ",
        "            surv_obj = survminer::surv_fit(survival::Surv(TTE, Status) ~ Trt.ID + Tank.ID, data = surv_db)",
        "+ ",
        "        } else {",
        "+ ",
        "            surv_obj = survminer::surv_fit(survival::Surv(TTE, Status) ~ Trt.ID, data = surv_db)",
        "+ ",
        "        }",
        "+ ",
        "        ",
        "+ ",
        "        surv_dat = data.frame(Trt.ID = summary(surv_obj)$strata,",
        "+ ",
        "                              Survprob = summary(surv_obj)$surv,",
        "+ ",
        "                              Time = summary(surv_obj)$time)",
        "+ ",
        "        ",
        "+ ",
        "        if(plot_bytank == TRUE){",
        "+ ",
        "            surv_dat = tidyr::separate(data = surv_dat, col = \"Trt.ID\", sep = \",\", into = c(\"Trt.ID\", \"Tank.ID\"))",
        "+ ",
        "            surv_dat$Tank.ID = sub(\"^.*=\", \"\", surv_dat$Tank.ID)",
        "+ ",
        "        }",
        "+ ",
        "        surv_dat$Trt.ID = sub(\"^.*=\", \"\", surv_dat$Trt.ID)",
        "+ ",
        "        ",
        "+ ",
        "        surv_plot = survminer::ggsurvplot(surv_obj,",
        "+ ",
        "                                          conf.int = FALSE,",
        "+ ",
        "                                          ggtheme = theme(plot.background = element_rect(fill = \"white\")),",
        "+ ",
        "                                          facet.by = if(plot_bytank == TRUE) {\"Trt.ID\"} else {NULL},",
        "+ ",
        "                                          surv.scale = \"percent\",",
        "+ ",
        "                                          short.panel.labs = TRUE)",
        "+ ",
        "        if(plot_bytank == TRUE){",
        "+ ",
        "            surv_plot$scales$scales = list()",
        "+ ",
        "            Survival_Plot = surv_plot + guides(color = guide_legend(\"Tank.ID\")) + theme(legend.position = \"right\") +",
        "+ ",
        "                scale_x_continuous(n.breaks = 10, name = xlab, limits = xlim) +",
        "+ ",
        "                scale_y_continuous(labels = scales::percent, limits = ylim, n.breaks = 10)",
        "+ ",
        "        } else {",
        "+ ",
        "            surv_plot$plot$scales$scales = list()",
        "+ ",
        "            Survival_Plot = surv_plot$plot + guides(color = guide_legend(\"Trt.ID\")) + theme(legend.position = \"right\") +",
        "+ ",
        "                scale_x_continuous(n.breaks = 10, name = xlab, limits = xlim) +",
        "+ ",
        "                scale_y_continuous(labels = scales::percent, limits = ylim, n.breaks = 10)",
        "+ ",
        "        }",
        "+ ",
        "        ",
        "+ ",
        "        if(theme == \"prism\") {Survival_Plot <- Survival_Plot + ggprism::theme_prism()}",
        "+ ",
        "        if(!is.null(colours)) {Survival_Plot <- Survival_Plot + scale_color_manual(values = colours)}",
        "+ ",
        "        ",
        "+ ",
        "        #Save Plots",
        "+ ",
        "        if(plot_save == TRUE){",
        "+ ",
        "            ggsave(paste(plot_prefix, \"Survival-Curve.tiff\", sep = \"-\"), dpi = 300,",
        "+ ",
        "                   width = plot_dim[1], height = plot_dim[2], plot = Survival_Plot)",
        "+ ",
        "            eoffice::topptx(figure = Survival_Plot, width = plot_dim[1], height = plot_dim[2],",
        "+ ",
        "                            filename = paste(plot_prefix, \"Survival-Curve.pptx\", sep = \"-\"))",
        "+ ",
        "        }",
        "+ ",
        "    }",
        "+ ",
        "    ",
        "+ ",
        "    if(dailybin == TRUE) {dbin <- max(surv_db$TTE)}",
        "+ ",
        "    if(dailybin == FALSE) {dbin <- NULL}",
        "+ ",
        "    ",
        "+ ",
        "    #create Haz_list",
        "+ ",
        "    if(plot == \"haz\" | plot == \"both\") {",
        "+ ",
        "        Haz_list = list()",
        "+ ",
        "        if(plot_bytank == TRUE) {",
        "+ ",
        "            surv_db$group = interaction(surv_db$Trt.ID, surv_db$Tank.ID, lex.order = TRUE, sep = \",\")",
        "+ ",
        "            Haz_Group_Vec = levels(factor(surv_db$group))",
        "+ ",
        "        } else {",
        "+ ",
        "            Haz_Group_Vec = levels(as.factor(surv_db$Trt.ID))",
        "+ ",
        "        }",
        "+ ",
        "        ",
        "+ ",
        "        for(Haz_Group in Haz_Group_Vec[4]) {",
        "+ ",
        "            if(plot_bytank == TRUE) {",
        "+ ",
        "                surv_db_group = surv_db[surv_db$group == Haz_Group,]",
        "+ ",
        "                surv_db_group$group = droplevels(surv_db_group$group)",
        "+ ",
        "            } else {",
        "+ ",
        "                surv_db_group = surv_db[surv_db$Trt.ID == Haz_Group,]",
        "+ ",
        "            }",
        "+ ",
        "            ",
        "+ ",
        "            if(sum(surv_db_group$Status) == 0){",
        "+ ",
        "                Haz_list[[Haz_Group]] = data.frame(Hazard = 0,",
        "+ ",
        "                                                   Time = rep(0, max(surv_db$TTE), 1))",
        "+ ",
        "            } else {",
        "+ ",
        "                if(length(levels(as.factor(surv_db_group$Tank.ID))) > 1) {",
        "+ ",
        "                    Haz_bs = suppressWarnings(bshazard::bshazard(nbin = dbin,",
        "+ ",
        "                                                                 data = surv_db_group,",
        "+ ",
        "                                                                 survival::Surv(TTE, Status) ~ Tank.ID,",
        "+ ",
        "                                                                 verbose = FALSE,",
        "+ ",
        "                                                                 lambda = lambda,",
        "+ ",
        "                                                                 phi = phi))",
        "+ ",
        "                } else {",
        "+ ",
        "                    Haz_bs = suppressWarnings(bshazard::bshazard(nbin = dbin,",
        "+ ",
        "                                                                 data = surv_db_group,",
        "+ ",
        "                                                                 survival::Surv(TTE, Status) ~ 1,",
        "+ ",
        "                                                                 verbose = FALSE,",
        "+ ",
        "                                                                 lambda = lambda,",
        "+ ",
        "                                                                 phi = phi))",
        "+ ",
        "                    print(Haz_Group)",
        "+ ",
        "                }",
        "+ ",
        "                Haz_list[[Haz_Group]] = data.frame(Hazard = Haz_bs$hazard,",
        "+ ",
        "                                                   Time = Haz_bs$time)",
        "+ ",
        "            }",
        "+ ",
        "        }",
        "+ ",
        "        ",
        "+ ",
        "        haz_db = dplyr::bind_rows(Haz_list, .id = \"Trt.ID\")",
        "+ ",
        "        if(plot_bytank == TRUE){",
        "+ ",
        "            haz_db = tidyr::separate(data = haz_db, col = \"Trt.ID\", into = c(\"Trt.ID\", \"Tank.ID\"), sep = \",\")",
        "+ ",
        "        }",
        "+ ",
        "        if(!is.null(trt_order)){haz_db$Trt.ID <- factor(haz_db$Trt.ID, levels = trt_order)}",
        "+ ",
        "        ",
        "+ ",
        "        Hazard_Plot = ggplot(data = haz_db, aes(x = Time, y = Hazard, color = Trt.ID)) +",
        "+ ",
        "            geom_line(linewidth = 1) +",
        "+ ",
        "            geom_point() +",
        "+ ",
        "            xlab(xlab) +",
        "+ ",
        "            scale_x_continuous(n.breaks = 10,",
        "+ ",
        "                               limits = xlim) +",
        "+ ",
        "            scale_y_continuous(n.breaks = 6, name = \"Hazard Rate\")",
        "+ ",
        "        ",
        "+ ",
        "        if(plot_bytank == TRUE) {",
        "+ ",
        "            Hazard_Plot$mapping = aes(x = Time, y = Hazard, color = Tank.ID)",
        "+ ",
        "            Hazard_Plot <- Hazard_Plot + facet_wrap(~ Trt.ID)",
        "+ ",
        "        }",
        "+ ",
        "        if(!is.null(colours)) {Hazard_Plot <- Hazard_Plot + scale_color_manual(values = colours)}",
        "+ ",
        "        if(theme == \"prism\") {Hazard_Plot <- Hazard_Plot + ggprism::theme_prism()}",
        "+ ",
        "        ",
        "+ ",
        "        #Save plots",
        "+ ",
        "        if(plot_save == TRUE) {",
        "+ ",
        "            ggsave(paste(plot_prefix, \"Hazard-Curve.tiff\", sep = \"-\"), dpi = 300,",
        "+ ",
        "                   width = plot_dim[1], height = plot_dim[2], plot = Hazard_Plot)",
        "+ ",
        "            eoffice::topptx(figure = Hazard_Plot, filename = paste(plot_prefix, \"Hazard-Curve.pptx\", sep = \"-\"),",
        "+ ",
        "                            width = plot_dim[1], height = plot_dim[2])",
        "+ ",
        "        }",
        "+ ",
        "    }",
        "+ ",
        "    ",
        "+ ",
        "    if(data_out == TRUE) {",
        "+ ",
        "        if(plot == \"surv\") {return(list(Survival_Plot = Survival_Plot, Survival_DB = surv_dat))}",
        "+ ",
        "        if(plot == \"haz\") {return(list(Hazard_Plot = Hazard_Plot, Hazard_DB = haz_db))}",
        "+ ",
        "        if(plot == \"both\") {return(list(Survival_Plot = Survival_Plot, Survival_DB = surv_dat, Hazard_Plot = Hazard_Plot, Hazard_DB = haz_db))}",
        "+ ",
        "    } else {",
        "+ ",
        "        if(plot == \"surv\") {return(Survival_Plot = Survival_Plot)}",
        "+ ",
        "        if(plot == \"haz\") {return(Hazard_Plot = Hazard_Plot)}",
        "+ ",
        "        if(plot == \"both\") {return(list(Survival_Plot = Survival_Plot, Hazard_Plot = Hazard_Plot))}",
        "+ ",
        "    }",
        "+ ",
        "}",
        "> ",
        "Surv_Plots(surv_db = surv_dat,",
        "+ ",
        "            plot_prefix = \"QCATC777\",",
        "+ ",
        "            xlim = c(0, 54),",
        "+ ",
        "            ylim = c(0, 1),",
        "+ ",
        "            xlab = \"TTE\",",
        "+ ",
        "            plot = \"both\",",
        "+ ",
        "            dailybin = FALSE,",
        "+ ",
        "            phi = 1.5,",
        "+ ",
        "            plot_bytank = TRUE)",
        "[1] \"B,C1\"\n$Survival_Plot\n\n$Hazard_Plot\n\n",
        "> ",
        "Surv_Plots = function(surv_db,",
        "+ ",
        "                      xlim = NULL,",
        "+ ",
        "                      ylim = c(0, 1),",
        "+ ",
        "                      xlab = \"Days Post Challenge\",",
        "+ ",
        "                      lambda = NULL,",
        "+ ",
        "                      phi = NULL,",
        "+ ",
        "                      dailybin = TRUE,",
        "+ ",
        "                      plot = \"both\",",
        "+ ",
        "                      colours = NULL,",
        "+ ",
        "                      theme = \"ggplot\",",
        "+ ",
        "                      trt_order = NULL,",
        "+ ",
        "                      data_out = FALSE,",
        "+ ",
        "                      plot_bytank = FALSE,",
        "+ ",
        "                      plot_save = TRUE,",
        "+ ",
        "                      plot_prefix = \"ONDA_XX\",",
        "+ ",
        "                      plot_dim = c(6, 4)) {",
        "+ ",
        "    ",
        "+ ",
        "    if(is.null(xlim)) {xlim <- c(0, max(surv_db$TTE))}",
        "+ ",
        "    if(!is.null(trt_order)){surv_db$Trt.ID = factor(surv_db$Trt.ID, levels = trt_order)}",
        "+ ",
        "    ",
        "+ ",
        "    if(plot == \"surv\" | plot == \"both\") {",
        "+ ",
        "        ",
        "+ ",
        "        if(plot_bytank == TRUE) {",
        "+ ",
        "            surv_obj = survminer::surv_fit(survival::Surv(TTE, Status) ~ Trt.ID + Tank.ID, data = surv_db)",
        "+ ",
        "        } else {",
        "+ ",
        "            surv_obj = survminer::surv_fit(survival::Surv(TTE, Status) ~ Trt.ID, data = surv_db)",
        "+ ",
        "        }",
        "+ ",
        "        ",
        "+ ",
        "        surv_dat = data.frame(Trt.ID = summary(surv_obj)$strata,",
        "+ ",
        "                              Survprob = summary(surv_obj)$surv,",
        "+ ",
        "                              Time = summary(surv_obj)$time)",
        "+ ",
        "        ",
        "+ ",
        "        if(plot_bytank == TRUE){",
        "+ ",
        "            surv_dat = tidyr::separate(data = surv_dat, col = \"Trt.ID\", sep = \",\", into = c(\"Trt.ID\", \"Tank.ID\"))",
        "+ ",
        "            surv_dat$Tank.ID = sub(\"^.*=\", \"\", surv_dat$Tank.ID)",
        "+ ",
        "        }",
        "+ ",
        "        surv_dat$Trt.ID = sub(\"^.*=\", \"\", surv_dat$Trt.ID)",
        "+ ",
        "        ",
        "+ ",
        "        surv_plot = survminer::ggsurvplot(surv_obj,",
        "+ ",
        "                                          conf.int = FALSE,",
        "+ ",
        "                                          ggtheme = theme(plot.background = element_rect(fill = \"white\")),",
        "+ ",
        "                                          facet.by = if(plot_bytank == TRUE) {\"Trt.ID\"} else {NULL},",
        "+ ",
        "                                          surv.scale = \"percent\",",
        "+ ",
        "                                          short.panel.labs = TRUE)",
        "+ ",
        "        if(plot_bytank == TRUE){",
        "+ ",
        "            surv_plot$scales$scales = list()",
        "+ ",
        "            Survival_Plot = surv_plot + guides(color = guide_legend(\"Tank.ID\")) + theme(legend.position = \"right\") +",
        "+ ",
        "                scale_x_continuous(n.breaks = 10, name = xlab, limits = xlim) +",
        "+ ",
        "                scale_y_continuous(labels = scales::percent, limits = ylim, n.breaks = 10)",
        "+ ",
        "        } else {",
        "+ ",
        "            surv_plot$plot$scales$scales = list()",
        "+ ",
        "            Survival_Plot = surv_plot$plot + guides(color = guide_legend(\"Trt.ID\")) + theme(legend.position = \"right\") +",
        "+ ",
        "                scale_x_continuous(n.breaks = 10, name = xlab, limits = xlim) +",
        "+ ",
        "                scale_y_continuous(labels = scales::percent, limits = ylim, n.breaks = 10)",
        "+ ",
        "        }",
        "+ ",
        "        ",
        "+ ",
        "        if(theme == \"prism\") {Survival_Plot <- Survival_Plot + ggprism::theme_prism()}",
        "+ ",
        "        if(!is.null(colours)) {Survival_Plot <- Survival_Plot + scale_color_manual(values = colours)}",
        "+ ",
        "        ",
        "+ ",
        "        #Save Plots",
        "+ ",
        "        if(plot_save == TRUE){",
        "+ ",
        "            ggsave(paste(plot_prefix, \"Survival-Curve.tiff\", sep = \"-\"), dpi = 300,",
        "+ ",
        "                   width = plot_dim[1], height = plot_dim[2], plot = Survival_Plot)",
        "+ ",
        "            eoffice::topptx(figure = Survival_Plot, width = plot_dim[1], height = plot_dim[2],",
        "+ ",
        "                            filename = paste(plot_prefix, \"Survival-Curve.pptx\", sep = \"-\"))",
        "+ ",
        "        }",
        "+ ",
        "    }",
        "+ ",
        "    ",
        "+ ",
        "    if(dailybin == TRUE) {dbin <- max(surv_db$TTE)}",
        "+ ",
        "    if(dailybin == FALSE) {dbin <- NULL}",
        "+ ",
        "    ",
        "+ ",
        "    #create Haz_list",
        "+ ",
        "    if(plot == \"haz\" | plot == \"both\") {",
        "+ ",
        "        Haz_list = list()",
        "+ ",
        "        if(plot_bytank == TRUE) {",
        "+ ",
        "            surv_db$group = interaction(surv_db$Trt.ID, surv_db$Tank.ID, lex.order = TRUE, sep = \",\")",
        "+ ",
        "            Haz_Group_Vec = levels(factor(surv_db$group))",
        "+ ",
        "        } else {",
        "+ ",
        "            Haz_Group_Vec = levels(as.factor(surv_db$Trt.ID))",
        "+ ",
        "        }",
        "+ ",
        "        ",
        "+ ",
        "        for(Haz_Group in Haz_Group_Vec) {",
        "+ ",
        "            if(plot_bytank == TRUE) {",
        "+ ",
        "                surv_db_group = surv_db[surv_db$group == Haz_Group,]",
        "+ ",
        "                surv_db_group$group = droplevels(surv_db_group$group)",
        "+ ",
        "            } else {",
        "+ ",
        "                surv_db_group = surv_db[surv_db$Trt.ID == Haz_Group,]",
        "+ ",
        "            }",
        "+ ",
        "            ",
        "+ ",
        "            if(sum(surv_db_group$Status) == 0){",
        "+ ",
        "                Haz_list[[Haz_Group]] = data.frame(Hazard = 0,",
        "+ ",
        "                                                   Time = rep(0, max(surv_db$TTE), 1))",
        "+ ",
        "            } else {",
        "+ ",
        "                if(length(levels(as.factor(surv_db_group$Tank.ID))) > 1) {",
        "+ ",
        "                    Haz_bs = suppressWarnings(bshazard::bshazard(nbin = dbin,",
        "+ ",
        "                                                                 data = surv_db_group,",
        "+ ",
        "                                                                 survival::Surv(TTE, Status) ~ Tank.ID,",
        "+ ",
        "                                                                 verbose = FALSE,",
        "+ ",
        "                                                                 lambda = lambda,",
        "+ ",
        "                                                                 phi = phi))",
        "+ ",
        "                } else {",
        "+ ",
        "                    Haz_bs = suppressWarnings(bshazard::bshazard(nbin = dbin,",
        "+ ",
        "                                                                 data = surv_db_group,",
        "+ ",
        "                                                                 survival::Surv(TTE, Status) ~ 1,",
        "+ ",
        "                                                                 verbose = FALSE,",
        "+ ",
        "                                                                 lambda = lambda,",
        "+ ",
        "                                                                 phi = phi))",
        "+ ",
        "                }",
        "+ ",
        "                Haz_list[[Haz_Group]] = data.frame(Hazard = Haz_bs$hazard,",
        "+ ",
        "                                                   Time = Haz_bs$time)",
        "+ ",
        "            }",
        "+ ",
        "        }",
        "+ ",
        "        ",
        "+ ",
        "        haz_db = dplyr::bind_rows(Haz_list, .id = \"Trt.ID\")",
        "+ ",
        "        if(plot_bytank == TRUE){",
        "+ ",
        "            haz_db = tidyr::separate(data = haz_db, col = \"Trt.ID\", into = c(\"Trt.ID\", \"Tank.ID\"), sep = \",\")",
        "+ ",
        "        }",
        "+ ",
        "        if(!is.null(trt_order)){haz_db$Trt.ID <- factor(haz_db$Trt.ID, levels = trt_order)}",
        "+ ",
        "        ",
        "+ ",
        "        Hazard_Plot = ggplot(data = haz_db, aes(x = Time, y = Hazard, color = Trt.ID)) +",
        "+ ",
        "            geom_line(linewidth = 1) +",
        "+ ",
        "            geom_point() +",
        "+ ",
        "            xlab(xlab) +",
        "+ ",
        "            scale_x_continuous(n.breaks = 10,",
        "+ ",
        "                               limits = xlim) +",
        "+ ",
        "            scale_y_continuous(n.breaks = 6, name = \"Hazard Rate\")",
        "+ ",
        "        ",
        "+ ",
        "        if(plot_bytank == TRUE) {",
        "+ ",
        "            Hazard_Plot$mapping = aes(x = Time, y = Hazard, color = Tank.ID)",
        "+ ",
        "            Hazard_Plot <- Hazard_Plot + facet_wrap(~ Trt.ID)",
        "+ ",
        "        }",
        "+ ",
        "        if(!is.null(colours)) {Hazard_Plot <- Hazard_Plot + scale_color_manual(values = colours)}",
        "+ ",
        "        if(theme == \"prism\") {Hazard_Plot <- Hazard_Plot + ggprism::theme_prism()}",
        "+ ",
        "        ",
        "+ ",
        "        #Save plots",
        "+ ",
        "        if(plot_save == TRUE) {",
        "+ ",
        "            ggsave(paste(plot_prefix, \"Hazard-Curve.tiff\", sep = \"-\"), dpi = 300,",
        "+ ",
        "                   width = plot_dim[1], height = plot_dim[2], plot = Hazard_Plot)",
        "+ ",
        "            eoffice::topptx(figure = Hazard_Plot, filename = paste(plot_prefix, \"Hazard-Curve.pptx\", sep = \"-\"),",
        "+ ",
        "                            width = plot_dim[1], height = plot_dim[2])",
        "+ ",
        "        }",
        "+ ",
        "    }",
        "+ ",
        "    ",
        "+ ",
        "    if(data_out == TRUE) {",
        "+ ",
        "        if(plot == \"surv\") {return(list(Survival_Plot = Survival_Plot, Survival_DB = surv_dat))}",
        "+ ",
        "        if(plot == \"haz\") {return(list(Hazard_Plot = Hazard_Plot, Hazard_DB = haz_db))}",
        "+ ",
        "        if(plot == \"both\") {return(list(Survival_Plot = Survival_Plot, Survival_DB = surv_dat, Hazard_Plot = Hazard_Plot, Hazard_DB = haz_db))}",
        "+ ",
        "    } else {",
        "+ ",
        "        if(plot == \"surv\") {return(Survival_Plot = Survival_Plot)}",
        "+ ",
        "        if(plot == \"haz\") {return(Hazard_Plot = Hazard_Plot)}",
        "+ ",
        "        if(plot == \"both\") {return(list(Survival_Plot = Survival_Plot, Hazard_Plot = Hazard_Plot))}",
        "+ ",
        "    }",
        "+ ",
        "}",
        "> ",
        "Surv_Plots(surv_db = surv_dat,",
        "+ ",
        "            plot_prefix = \"QCATC777\",",
        "+ ",
        "            xlim = c(0, 54),",
        "+ ",
        "            ylim = c(0, 1),",
        "+ ",
        "            xlab = \"TTE\",",
        "+ ",
        "            plot = \"both\",",
        "+ ",
        "            dailybin = FALSE,",
        "+ ",
        "            phi = 1.5, # often needed in single tank groups for accurate estimation",
        "+ ",
        "            plot_bytank = TRUE)",
        "$Survival_Plot\n\n$Hazard_Plot\n\n",
        "> ",
        "Surv_Plots(surv_db = pred_DB,",
        "+ ",
        "           dailybin = FALSE,",
        "+ ",
        "           phi = 1.5)",
        "NOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\n$Survival_Plot\n\n$Hazard_Plot\n\n",
        "> ",
        "Surv_Plots(surv_db = pred_DB,",
        "+ ",
        "           dailybin = FALSE,",
        "+ ",
        "           phi = 1.5)",
        "NOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\n$Survival_Plot\n\n$Hazard_Plot\n\n",
        "> ",
        "Surv_Plots(surv_db = pred_DB,",
        "+ ",
        "           dailybin = FALSE,",
        "+ ",
        "           phi = 1.5,",
        "+ ",
        "           plot_bytank = TRUE)",
        "$Survival_Plot\n\n$Hazard_Plot\n\n",
        "> ",
        "Surv_Plots(surv_db = pred_DB,",
        "+ ",
        "           dailybin = FALSE,",
        "+ ",
        "           plot_bytank = TRUE)",
        "> ",
        "Surv_Plots(surv_db = pred_DB,",
        "+ ",
        "           dailybin = FALSE,",
        "+ ",
        "           phi = 2,",
        "+ ",
        "           plot_bytank = TRUE)",
        "$Survival_Plot\n\n$Hazard_Plot\n\n",
        "> ",
        "Surv_Plots(surv_db = pred_DB,",
        "+ ",
        "           dailybin = FALSE,",
        "+ ",
        "           phi = 1.5,",
        "+ ",
        "           plot_bytank = TRUE)",
        "$Survival_Plot\n\n$Hazard_Plot\n\n",
        "> ",
        "Surv_Plots(surv_db = pred_DB,",
        "+ ",
        "           dailybin = FALSE,",
        "+ ",
        "           phi = 3,",
        "+ ",
        "           plot_bytank = TRUE)",
        "$Survival_Plot\n\n$Hazard_Plot\n\n",
        "> ",
        "Surv_Plots(surv_db = pred_DB,",
        "+ ",
        "           dailybin = FALSE,",
        "+ ",
        "           phi = 1.5,",
        "+ ",
        "           plot_bytank = TRUE)",
        "$Survival_Plot\n\n$Hazard_Plot\n\n",
        "> ",
        "Surv_Plots(surv_db = pred_DB,",
        "+ ",
        "           dailybin = FALSE,",
        "+ ",
        "           phi = 2,",
        "+ ",
        "           plot_bytank = TRUE)",
        "$Survival_Plot\n\n$Hazard_Plot\n\n",
        "> ",
        "Surv_Plots(surv_db = pred_DB,",
        "+ ",
        "           dailybin = FALSE,",
        "+ ",
        "           lambda = 100,",
        "+ ",
        "           plot_bytank = TRUE)",
        "$Survival_Plot\n\n$Hazard_Plot\n\n",
        "> ",
        "Surv_Plots(surv_db = pred_DB,",
        "+ ",
        "           dailybin = FALSE,",
        "+ ",
        "           lambda = 200,",
        "+ ",
        "           plot_bytank = TRUE)",
        "$Survival_Plot\n\n$Hazard_Plot\n\n",
        "> ",
        "Surv_Plots(surv_db = pred_DB,",
        "+ ",
        "           dailybin = FALSE)",
        "NOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\n$Survival_Plot\n\n$Hazard_Plot\n\n",
        "> ",
        "library(safuncs)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "setwd(\"C:/Users/sean4/Downloads\")",
        "> ",
        "> ",
        "ref_surv_db = read.csv(file = \"QCATC997 Mort.csv\")",
        "> ",
        "ref_surv_db2 = ref_surv_db[ref_surv_db$Trt.ID == \"E\",]",
        "> ",
        "ref_surv_db2$TTE = ref_surv_db2$TTE - 3",
        "> ",
        "> ",
        "pred_mort_DB = read.csv(file = \"ONDA01166 Mort.csv\")",
        "> ",
        "pred_start_DB = read.csv(file = \"ONDA01166 starting_fish_count.csv\")",
        "> ",
        "> ",
        "pred_DB = Surv_Gen(mort_db = pred_mort_DB,",
        "+ ",
        "                   starting_fish_count = pred_start_DB,",
        "+ ",
        "                   last_tte = 31)",
        "[1] \"Your total number of tanks is: 18\"\n[1] \"Your total number of treatment groups is: 6\"\n[1] \"Your total number of fish in the output data is: 1782\"\n",
        "> ",
        "Surv_Plots(surv_db = pred_DB,",
        "+ ",
        "           dailybin = FALSE)",
        "NOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\n$Survival_Plot\n\n$Hazard_Plot\n\n",
        "> ",
        "library(safuncs)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "setwd(\"C:/Users/sean4/Downloads\")",
        "> ",
        "> ",
        "ref_surv_db = read.csv(file = \"QCATC997 Mort.csv\")",
        "> ",
        "ref_surv_db2 = ref_surv_db[ref_surv_db$Trt.ID == \"E\",]",
        "> ",
        "ref_surv_db2$TTE = ref_surv_db2$TTE - 3",
        "> ",
        "> ",
        "pred_mort_DB = read.csv(file = \"ONDA01166 Mort.csv\")",
        "> ",
        "pred_start_DB = read.csv(file = \"ONDA01166 starting_fish_count.csv\")",
        "> ",
        "> ",
        "pred_DB = Surv_Gen(mort_db = pred_mort_DB,",
        "+ ",
        "                   starting_fish_count = pred_start_DB,",
        "+ ",
        "                   last_tte = 30)",
        "[1] \"Your total number of tanks is: 18\"\n[1] \"Your total number of treatment groups is: 6\"\n[1] \"Your total number of fish in the output data is: 1782\"\n",
        "> ",
        "Surv_Plots(surv_db = pred_DB,",
        "+ ",
        "           dailybin = FALSE)",
        "NOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\n$Survival_Plot\n\n$Hazard_Plot\n\n",
        "> ",
        "Surv_Plots(surv_db = pred_DB,",
        "+ ",
        "           dailybin = FALSE)",
        "NOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\n$Survival_Plot\n\n$Hazard_Plot\n\n",
        "> ",
        "> ",
        "Surv_Plots(surv_db = pred_DB,",
        "+ ",
        "           dailybin = TRUE,",
        "+ ",
        "           phi = 1.5,",
        "+ ",
        "           plot_bytank = TRUE)",
        "NOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: ",
        "entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\n$Survival_Plot\n\n$Hazard_Plot\n\n",
        "> ",
        "Surv_Plots(surv_db = pred_DB,",
        "+ ",
        "           dailybin = FALSE)",
        "NOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\n$Survival_Plot\n\n$Hazard_Plot\n\n",
        "> ",
        "> ",
        "Surv_Plots(surv_db = pred_DB,",
        "+ ",
        "           dailybin = TRUE,",
        "+ ",
        "           phi = 1,",
        "+ ",
        "           plot_bytank = TRUE)",
        "NOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: ",
        "entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\n$Survival_Plot\n\n$Hazard_Plot\n\n",
        "> ",
        "Surv_Plots(surv_db = pred_DB,",
        "+ ",
        "           dailybin = FALSE)",
        "NOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\n$Survival_Plot\n\n$Hazard_Plot\n\n",
        "> ",
        "> ",
        "Surv_Plots(surv_db = pred_DB,",
        "+ ",
        "           dailybin = TRUE,",
        "+ ",
        "           phi = 0.1,",
        "+ ",
        "           plot_bytank = TRUE)",
        "NOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: ",
        "entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\nNOTE: entry.status has been set to 0 for all.\n$Survival_Plot\n\n$Hazard_Plot\n\n\nRestarting R session...\n\n"
    ]
}